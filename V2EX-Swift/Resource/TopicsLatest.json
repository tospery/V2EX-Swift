[
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1606803283",
            "name": "share",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1606803283",
            "title": "分享发现",
            "url": "https://www.v2ex.com/go/share",
            "topics": 33246,
            "footer": "",
            "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。",
            "title_alternative": "Share",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1606803283",
            "stars": 4312,
            "aliases": [],
            "root": false,
            "id": 16,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "ODD10",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/173f/e7d0/364201_mini.png?m=1596709570",
            "bio": "",
            "url": "https://www.v2ex.com/u/ODD10",
            "tagline": "",
            "twitter": "",
            "created": 1542615585,
            "avatar_large": "https://cdn.v2ex.com/avatar/173f/e7d0/364201_mini.png?m=1596709570",
            "avatar_mini": "https://cdn.v2ex.com/avatar/173f/e7d0/364201_mini.png?m=1596709570",
            "location": "",
            "btc": "",
            "id": 364201
        },
        "last_reply_by": "ODD10",
        "last_touched": 1607712778,
        "title": "电信 esim 一号双终端 似乎 0 费用",
        "url": "https://www.v2ex.com/t/734694",
        "created": 1607712400,
        "content": "联通已退订<br><br>![V2erForiOS]( https://i.loli.net/2020/12/12/oJZ1eASjghyL8QE.jpg)",
        "content_rendered": "<p>联通已退订<br/><br/><img alt=\"V2erForiOS\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2020/12/12/oJZ1eASjghyL8QE.jpg\"/></p>\n",
        "last_modified": 1607712400,
        "replies": 1,
        "id": 734694
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6512/bd43/11_large.png?m=1604596625",
            "name": "linux",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6512/bd43/11_normal.png?m=1604596625",
            "title": "Linux",
            "url": "https://www.v2ex.com/go/linux",
            "topics": 5889,
            "footer": "",
            "header": "Linux is a Unix-like computer operating system assembled under the model of free and open source software development and distribution.",
            "title_alternative": "Linux",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6512/bd43/11_mini.png?m=1604596625",
            "stars": 5353,
            "aliases": [],
            "root": false,
            "id": 11,
            "parent_node_name": "os"
        },
        "member": {
            "username": "feather12315",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/163e/6dcb/112749_mini.png?m=1455773093",
            "bio": "",
            "url": "https://www.v2ex.com/u/feather12315",
            "tagline": "",
            "twitter": "",
            "created": 1429699210,
            "avatar_large": "https://cdn.v2ex.com/avatar/163e/6dcb/112749_mini.png?m=1455773093",
            "avatar_mini": "https://cdn.v2ex.com/avatar/163e/6dcb/112749_mini.png?m=1455773093",
            "location": "",
            "btc": "",
            "id": 112749
        },
        "last_reply_by": "",
        "last_touched": 1607710821,
        "title": "迫于被名词所困，分享一下自己对 Linux 下动态调试工具概念的理解",
        "url": "https://www.v2ex.com/t/734693",
        "created": 1607710821,
        "content": "对于 ftrace 、tracepoint 、kprobe 等名词，简单地划分三个层次：\r\n\r\n- 数据获取方式\r\n\r\n4+1 类：`kprobe / uprobe / tracepoint / USDT / <基于硬件实现的计数器>` \r\n\r\n- 数据传递手段\r\n\r\n3 类机制：`ftrace / perf_event_open() / eBPF`\r\n其中`ftrace`又有`tracer`，`ftrace-based events`(tracepoint-based / kprobe-based, uprobe-based / perf events)\r\n\r\n- 用户前端工具\r\n\r\n基于上述数据获取方式、传递手段实现的 systemtap，perf，bcc 等\r\n\r\n自己写的 blog 原文：[Linux 动态追踪工具一览]( https://vvl.me/2020/12/the-Overview-of-Linux-Tracing-Tools/)\r\n\r\n特别推荐的参考资料：\r\n\r\n1. [lwn.net: Unifying kernel tracing][1]\r\n2. [Julia Evans Blog: Linux tracing systems & how they fit together][2]\r\n3. [Slides: Unified Tracing Platform Bringing tracing together][3]\r\n\r\n[1]: https://lwn.net/Articles/803347/\r\n[2]: https://jvns.ca/blog/2017/07/05/linux-tracing-systems/\r\n[3]: https://static.sched.com/hosted_files/osseu19/5f/unified-tracing-platform-oss-eu-2019.pdf",
        "content_rendered": "<p>对于 ftrace 、tracepoint 、kprobe 等名词，简单地划分三个层次：</p>\n<ul>\n<li>数据获取方式</li>\n</ul>\n<p>4+1 类：<code>kprobe / uprobe / tracepoint / USDT / &lt;基于硬件实现的计数器&gt;</code></p>\n<ul>\n<li>数据传递手段</li>\n</ul>\n<p>3 类机制：<code>ftrace / perf_event_open() / eBPF</code>\n其中<code>ftrace</code>又有<code>tracer</code>，<code>ftrace-based events</code>(tracepoint-based / kprobe-based, uprobe-based / perf events)</p>\n<ul>\n<li>用户前端工具</li>\n</ul>\n<p>基于上述数据获取方式、传递手段实现的 systemtap，perf，bcc 等</p>\n<p>自己写的 blog 原文：<a href=\"https://vvl.me/2020/12/the-Overview-of-Linux-Tracing-Tools/\" rel=\"nofollow\">Linux 动态追踪工具一览</a></p>\n<p>特别推荐的参考资料：</p>\n<ol>\n<li><a href=\"https://lwn.net/Articles/803347/\" rel=\"nofollow\">lwn.net: Unifying kernel tracing</a></li>\n<li><a href=\"https://jvns.ca/blog/2017/07/05/linux-tracing-systems/\" rel=\"nofollow\">Julia Evans Blog: Linux tracing systems &amp; how they fit together</a></li>\n<li><a href=\"https://static.sched.com/hosted_files/osseu19/5f/unified-tracing-platform-oss-eu-2019.pdf\" rel=\"nofollow\">Slides: Unified Tracing Platform Bringing tracing together</a></li>\n</ol>\n",
        "last_modified": 1607710921,
        "replies": 0,
        "id": 734693
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "leaves7i",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/a1f0a1040304abd9e50aa0e27089c155?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/leaves7i",
            "tagline": "",
            "twitter": "",
            "created": 1479786872,
            "avatar_large": "https://cdn.v2ex.com/gravatar/a1f0a1040304abd9e50aa0e27089c155?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/a1f0a1040304abd9e50aa0e27089c155?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 202386
        },
        "last_reply_by": "",
        "last_touched": 1607709247,
        "title": "迫于打游戏容易切输入法，求一段 AutoHotHey 代码实现",
        "url": "https://www.v2ex.com/t/734690",
        "created": 1607709247,
        "content": "Windows10，微软拼音输入法  \r\n中英文切换：Ctrl + Space  \r\n\r\n需求：   \r\n0，左 Shift 正常使用  \r\n1，正常响应右 Shift 键的事件（如切大小写、上档输符号或其他软件的热键）   \r\n2，当且仅当右 Shift 键按下并松开时，切换 Windows 输入法（微软拼音 / 英语）   \r\n\r\n目前代码：  \r\n```\r\n~RShift Up::\r\nSend, ^{Space}\r\nToolTip, 已切换\r\nSleep, 1000\r\nToolTip,\r\nreturn\r\n```\r\n这个虽然可以正常响应按键，但是每次 Shift 键松开都会触发一次，现在不知道怎么继续改了",
        "content_rendered": "<p>Windows10，微软拼音输入法<br/>\n中英文切换：Ctrl + Space</p>\n<p>需求：<br/>\n0，左 Shift 正常使用<br/>\n1，正常响应右 Shift 键的事件（如切大小写、上档输符号或其他软件的热键）<br/>\n2，当且仅当右 Shift 键按下并松开时，切换 Windows 输入法（微软拼音 / 英语）</p>\n<p>目前代码：</p>\n<pre><code>~RShift Up::\nSend, ^{Space}\nToolTip, 已切换\nSleep, 1000\nToolTip,\nreturn\n</code></pre>\n<p>这个虽然可以正常响应按键，但是每次 Shift 键松开都会触发一次，现在不知道怎么继续改了</p>\n",
        "last_modified": 1607709247,
        "replies": 0,
        "id": 734690
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c9f0/f895/8_large.png?m=1607656868",
            "name": "iphone",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c9f0/f895/8_normal.png?m=1607656868",
            "title": "iPhone",
            "url": "https://www.v2ex.com/go/iphone",
            "topics": 8091,
            "footer": "这里绝不讨论如何获得 iPhone 盗版软件、iTunes 黑卡之类。",
            "header": "Say hello to the future.",
            "title_alternative": "iPhone",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c9f0/f895/8_mini.png?m=1607656868",
            "stars": 2537,
            "aliases": [],
            "root": false,
            "id": 8,
            "parent_node_name": "apple"
        },
        "member": {
            "username": "bingheath",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/4dd2/fdea/235387_mini.png?m=1542741168",
            "bio": null,
            "url": "https://www.v2ex.com/u/bingheath",
            "tagline": null,
            "twitter": null,
            "created": 1497373951,
            "avatar_large": "https://cdn.v2ex.com/avatar/4dd2/fdea/235387_mini.png?m=1542741168",
            "avatar_mini": "https://cdn.v2ex.com/avatar/4dd2/fdea/235387_mini.png?m=1542741168",
            "location": null,
            "btc": null,
            "id": 235387
        },
        "last_reply_by": "ohiu",
        "last_touched": 1607710562,
        "title": "怎么将自己的手机锁到几乎死透？～ 分享一个前无古人的脑残操作",
        "url": "https://www.v2ex.com/t/734689",
        "created": 1607707824,
        "content": "事情是这样的，去年首发买了 iphone 11 pro max 的绿色 256G，当时自己刚留学在美国，官网下单的时候看到 apple care +的选项里包括遗失和被偷窃的保险。于是也就买了一个。风平浪静一年过后，今年年底 12 发售了，等了一个月，等到 12 pro max 可以预定，于是想着要不要以旧换新买一个。遂在手机设置寻找怎么能关闭 apple care +。于是，我的脑残操作开始了。\r\n\r\n在手机的 apple care 设置里面我瞬间就被那个我都忘记了的丢失失窃保险选项吸引了，于是手贱点了一下，在等待加载的时候，觉得好像不应该点进来，于是切了出去（此处划重点），之后仍然翻了一阵子设置，没有找到如何暂停的我关掉了手机屏幕准备在网页上找客服，没想到就发现手机已经开始进入 apple logo 下的进度条状态。同时我接到了 apple 发来的手机丢失的邮件，告诉我数据已经被擦除了。于是，我找客服的目的就变了。\r\n\r\n我按照邮件的提示链接进入了一个保险公司的页面，上面还有我的案例编号。我通过编号检索不到我的记录。客服回复说可能需要几个小时才能查询，问我是否有其他需求。我说我想关闭 apple care，客服顺利帮我关掉了（划重点再一次），这时候我才注意到手机无法开机激活了，提示要联系客服。客服和我说，等等，最多两小时就好了。 \r\n\r\n心大的我等了两小时，仍旧不能激活。于是联系客服，发现客服下班了。于是打国际长途给国内的苹果客服。客服耐心的帮我尝试了各种办法解锁，费时两小时无果，让我提交发票等材料证明是我的手机。可挂掉电话我发现丫的美国人不讲武德，哪里有发票！只能提交相关邮件和订单截图。一天后，我接到了上海的电话，告诉我，解不开。。。。。\r\n\r\n这期间我等到了美国客服的上班，然而报了案例号之后，客服说，这里面咋都是中文的对话呢，不行，你得重新和我描述。在我废了一堆口舌之后，他让我自己联系保险公司。而实际情况是，保险公司发来的邮件所提供的案例编号根本查不到。于是只得打保险公司电话，在漫长等待后保险公司客服说，我们问问苹果去，这样，皮球又踢给了苹果。我们用保险公司的线路又和苹果的一个新客服从头聊了起来。\r\n\r\n期间客服一直让我在查找我的设备中删掉我的这台 iphone，但是，我就是删不掉，苹果表示不信，不同的客服在不同的日子反复控制的我各种设备，围观我删这个 iphone 在我的账户中，怎奈就是删不掉。\r\n\r\n这样扯皮了三天。手机仍然无法激活。但最终，一个不知道转了多少次的好高级的客服代表告诉了我为何有如此棘手的状况：\r\n1，你点开了保险公司的报失流程，但是还没加载你就退出了，导致报失程序悬停在了空中，保险公司和 apple 都没收到，却又实际的生成了一个不存在的案例编号。如果我等到加载出具体页面再点击结束报失也不至于此。\r\n2，我成功取消了的 apple care，如果我没有取消，大可以通过 apple care 的流程关闭这个报失，但是我把后路切断了，apple care 已经续不上了。\r\n3 我只能等待保险公司定期的案例清理，这个不能人工干预，是周期性的，却没法告诉我具体日期以及成功率。\r\n4，谢谢我帮助 apple 找到了一个流程漏洞\r\n\r\n最后手机在后来不知多久后的一天，我一次开机中发现已经能解锁了。但是具体什么时候好的我却忘记了，最终还是买了 iphone 12.而这个 iphone11 让我在两周前以旧换新了一个 m1 的 mac mini 。而那就是另外的故事了。\r\n\r\n这个故事给我的教训就是，不要手贱！",
        "content_rendered": "事情是这样的，去年首发买了 iphone 11 pro max 的绿色 256G，当时自己刚留学在美国，官网下单的时候看到 apple care +的选项里包括遗失和被偷窃的保险。于是也就买了一个。风平浪静一年过后，今年年底 12 发售了，等了一个月，等到 12 pro max 可以预定，于是想着要不要以旧换新买一个。遂在手机设置寻找怎么能关闭 apple care +。于是，我的脑残操作开始了。<br /><br />在手机的 apple care 设置里面我瞬间就被那个我都忘记了的丢失失窃保险选项吸引了，于是手贱点了一下，在等待加载的时候，觉得好像不应该点进来，于是切了出去（此处划重点），之后仍然翻了一阵子设置，没有找到如何暂停的我关掉了手机屏幕准备在网页上找客服，没想到就发现手机已经开始进入 apple logo 下的进度条状态。同时我接到了 apple 发来的手机丢失的邮件，告诉我数据已经被擦除了。于是，我找客服的目的就变了。<br /><br />我按照邮件的提示链接进入了一个保险公司的页面，上面还有我的案例编号。我通过编号检索不到我的记录。客服回复说可能需要几个小时才能查询，问我是否有其他需求。我说我想关闭 apple care，客服顺利帮我关掉了（划重点再一次），这时候我才注意到手机无法开机激活了，提示要联系客服。客服和我说，等等，最多两小时就好了。 <br /><br />心大的我等了两小时，仍旧不能激活。于是联系客服，发现客服下班了。于是打国际长途给国内的苹果客服。客服耐心的帮我尝试了各种办法解锁，费时两小时无果，让我提交发票等材料证明是我的手机。可挂掉电话我发现丫的美国人不讲武德，哪里有发票！只能提交相关邮件和订单截图。一天后，我接到了上海的电话，告诉我，解不开。。。。。<br /><br />这期间我等到了美国客服的上班，然而报了案例号之后，客服说，这里面咋都是中文的对话呢，不行，你得重新和我描述。在我废了一堆口舌之后，他让我自己联系保险公司。而实际情况是，保险公司发来的邮件所提供的案例编号根本查不到。于是只得打保险公司电话，在漫长等待后保险公司客服说，我们问问苹果去，这样，皮球又踢给了苹果。我们用保险公司的线路又和苹果的一个新客服从头聊了起来。<br /><br />期间客服一直让我在查找我的设备中删掉我的这台 iphone，但是，我就是删不掉，苹果表示不信，不同的客服在不同的日子反复控制的我各种设备，围观我删这个 iphone 在我的账户中，怎奈就是删不掉。<br /><br />这样扯皮了三天。手机仍然无法激活。但最终，一个不知道转了多少次的好高级的客服代表告诉了我为何有如此棘手的状况：<br />1，你点开了保险公司的报失流程，但是还没加载你就退出了，导致报失程序悬停在了空中，保险公司和 apple 都没收到，却又实际的生成了一个不存在的案例编号。如果我等到加载出具体页面再点击结束报失也不至于此。<br />2，我成功取消了的 apple care，如果我没有取消，大可以通过 apple care 的流程关闭这个报失，但是我把后路切断了，apple care 已经续不上了。<br />3 我只能等待保险公司定期的案例清理，这个不能人工干预，是周期性的，却没法告诉我具体日期以及成功率。<br />4，谢谢我帮助 apple 找到了一个流程漏洞<br /><br />最后手机在后来不知多久后的一天，我一次开机中发现已经能解锁了。但是具体什么时候好的我却忘记了，最终还是买了 iphone 12.而这个 iphone11 让我在两周前以旧换新了一个 m1 的 mac mini 。而那就是另外的故事了。<br /><br />这个故事给我的教训就是，不要手贱！",
        "last_modified": 1607707824,
        "replies": 2,
        "id": 734689
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/17e6/2166/43_large.png?m=1605803735",
            "name": "jobs",
            "avatar_normal": "https://cdn.v2ex.com/navatar/17e6/2166/43_normal.png?m=1605803735",
            "title": "酷工作",
            "url": "https://www.v2ex.com/go/jobs",
            "topics": 44955,
            "footer": "",
            "header": "做有趣的有意义的事情。",
            "title_alternative": "Jobs",
            "avatar_mini": "https://cdn.v2ex.com/navatar/17e6/2166/43_mini.png?m=1605803735",
            "stars": 4472,
            "aliases": [],
            "root": false,
            "id": 43,
            "parent_node_name": "work"
        },
        "member": {
            "username": "comastar1234",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/c54ac5d161dff9079cddf8bc87b55149?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/comastar1234",
            "tagline": null,
            "twitter": null,
            "created": 1607682983,
            "avatar_large": "https://cdn.v2ex.com/gravatar/c54ac5d161dff9079cddf8bc87b55149?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/c54ac5d161dff9079cddf8bc87b55149?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 523418
        },
        "last_reply_by": "",
        "last_touched": 1607619222,
        "title": "新加坡 - 招聘笔记本维修员",
        "url": "https://www.v2ex.com/t/734686",
        "created": 1607705622,
        "content": "本店因业务需求招聘笔记本维修员, 必需要懂得维修主板. (笔记本主板为重）\r\n维修经验至少要 2 年以上.\r\n\r\n工作地点: 1 Rochor Canal Road, #05-05, Sim Lim Square, Singapore 188504\r\n\r\n薪金: RMB 15,000 + 10% 佣金 + 补贴屋租 + 伙食费 + 检测费用\r\n\r\n微信：Akai_2088",
        "content_rendered": "本店因业务需求招聘笔记本维修员, 必需要懂得维修主板. (笔记本主板为重）<br />维修经验至少要 2 年以上.<br /><br />工作地点: 1 Rochor Canal Road, #05-05, Sim Lim Square, Singapore 188504<br /><br />薪金: RMB 15,000 + 10% 佣金 + 补贴屋租 + 伙食费 + 检测费用<br /><br />微信：Akai_2088",
        "last_modified": 1607705696,
        "replies": 0,
        "id": 734686
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/e57c/6b95/772_large.png?m=1584385777",
            "name": "github",
            "avatar_normal": "https://cdn.v2ex.com/navatar/e57c/6b95/772_normal.png?m=1584385777",
            "title": "GitHub",
            "url": "https://www.v2ex.com/go/github",
            "topics": 805,
            "footer": "",
            "header": "A global place for programmers.",
            "title_alternative": "GitHub",
            "avatar_mini": "https://cdn.v2ex.com/navatar/e57c/6b95/772_mini.png?m=1584385777",
            "stars": 366,
            "aliases": [],
            "root": false,
            "id": 772,
            "parent_node_name": "programmer"
        },
        "member": {
            "username": "chinafengzhao",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/7add19fef7d409ef03f2b49bce30c1b2?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/chinafengzhao",
            "tagline": null,
            "twitter": null,
            "created": 1525968748,
            "avatar_large": "https://cdn.v2ex.com/gravatar/7add19fef7d409ef03f2b49bce30c1b2?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/7add19fef7d409ef03f2b49bce30c1b2?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 315623
        },
        "last_reply_by": "",
        "last_touched": 1607705504,
        "title": "github 如何按照 star 项目排序？如何查看分页？",
        "url": "https://www.v2ex.com/t/734685",
        "created": 1607705564,
        "content": "平时 star 了一千多个项目，有的时候，大概记得某个项目，但是忘记了具体的名字和使用。只记得 star 数有两三百个，很想找到，请问在看自己 star 过的项目中，如何按照这些项目自己的 star 数排序？\r\n\r\n看自己 star 项目，好像默认是按照自己 star 这些项目的时间排序，实在是太多了，忘记什么时候 star 的，我什么时候 star 过这个项目，前台也看到这个时间字段。\r\n\r\n如何分页？有大佬做这种开源插件吗？",
        "content_rendered": "<p>平时 star 了一千多个项目，有的时候，大概记得某个项目，但是忘记了具体的名字和使用。只记得 star 数有两三百个，很想找到，请问在看自己 star 过的项目中，如何按照这些项目自己的 star 数排序？</p>\n<p>看自己 star 项目，好像默认是按照自己 star 这些项目的时间排序，实在是太多了，忘记什么时候 star 的，我什么时候 star 过这个项目，前台也看到这个时间字段。</p>\n<p>如何分页？有大佬做这种开源插件吗？</p>\n",
        "last_modified": 1607705618,
        "replies": 0,
        "id": 734685
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1607656893",
            "name": "mbp",
            "avatar_normal": "https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1607656893",
            "title": "MacBook Pro",
            "url": "https://www.v2ex.com/go/mbp",
            "topics": 6636,
            "footer": "",
            "header": "State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.",
            "title_alternative": "MacBook Pro",
            "avatar_mini": "https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1607656893",
            "stars": 2785,
            "aliases": [],
            "root": false,
            "id": 10,
            "parent_node_name": "apple"
        },
        "member": {
            "username": "patz",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/54e9/b077/492360_mini.png?m=1593514238",
            "bio": null,
            "url": "https://www.v2ex.com/u/patz",
            "tagline": null,
            "twitter": null,
            "created": 1590828436,
            "avatar_large": "https://cdn.v2ex.com/avatar/54e9/b077/492360_mini.png?m=1593514238",
            "avatar_mini": "https://cdn.v2ex.com/avatar/54e9/b077/492360_mini.png?m=1593514238",
            "location": null,
            "btc": null,
            "id": 492360
        },
        "last_reply_by": "patz",
        "last_touched": 1607712827,
        "title": "macOS 如何实现录制系统内声音",
        "url": "https://www.v2ex.com/t/734684",
        "created": 1607704890,
        "content": "Mac 录屏教程 - 如何使用 Soundflower 录制系统声音\r\n\r\nhttps://zhuanlan.zhihu.com/p/3346719",
        "content_rendered": "Mac 录屏教程 - 如何使用 Soundflower 录制系统声音<br /><br /><a target=\"_blank\" href=\"https://zhuanlan.zhihu.com/p/3346719\" rel=\"nofollow noopener\">https://zhuanlan.zhihu.com/p/3346719</a>",
        "last_modified": 1607704890,
        "replies": 4,
        "id": 734684
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/f61d/6947/375_large.png?m=1585387643",
            "name": "go",
            "avatar_normal": "https://cdn.v2ex.com/navatar/f61d/6947/375_normal.png?m=1585387643",
            "title": "Go",
            "url": "https://www.v2ex.com/go/go",
            "topics": 1687,
            "footer": "",
            "header": "Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。",
            "title_alternative": "The Go Programming Language",
            "avatar_mini": "https://cdn.v2ex.com/navatar/f61d/6947/375_mini.png?m=1585387643",
            "stars": 2386,
            "aliases": [],
            "root": false,
            "id": 375,
            "parent_node_name": "programming"
        },
        "member": {
            "username": "lesismal",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/3c8c397f7f9ffa3b6ecf452de57636f4?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/lesismal",
            "tagline": null,
            "twitter": null,
            "created": 1594014598,
            "avatar_large": "https://cdn.v2ex.com/gravatar/3c8c397f7f9ffa3b6ecf452de57636f4?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/3c8c397f7f9ffa3b6ecf452de57636f4?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 497905
        },
        "last_reply_by": "so1n",
        "last_touched": 1607709631,
        "title": "RPC 的变革 —— ARPC 项目自荐",
        "url": "https://www.v2ex.com/t/734682",
        "created": 1607704315,
        "content": "已加入 [awesome-go]( https://github.com/avelino/awesome-go#distributed-systems)\r\n\r\n# **RPC** 的变革 —— **ARPC** 项目自荐 \r\n\r\n项目地址： [https://github.com/lesismal/arpc]( https://github.com/lesismal/arpc)\r\n\r\n## 一、**ARPC** 示例\r\n\r\n### **echo server**\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"log\"\r\n\r\n\t\"github.com/lesismal/arpc\"\r\n)\r\n\r\nfunc onEcho(ctx *arpc.Context) {\r\n\tstr := \"\"\r\n\terr := ctx.Bind(&str)\r\n\tif err != nil {\r\n\t\tlog.Printf(\"/echo error: %v\", err)\r\n\t\treturn\r\n\t}\r\n\tctx.Write(str)\r\n\tlog.Printf(\"/echo: %v\", str)\r\n}\r\n\r\nfunc main() {\r\n\tsvr := arpc.NewServer()\r\n\r\n\t// register handler\r\n\tsvr.Handler.Handle(\"/echo\", onEcho)\r\n\r\n\tsvr.Run(\":8888\")\r\n}\r\n```\r\n\r\n### **echo client**\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"log\"\r\n\t\"net\"\r\n\t\"time\"\r\n\r\n\t\"github.com/lesismal/arpc\"\r\n)\r\n\r\nfunc dialer() (net.Conn, error) {\r\n\treturn net.DialTimeout(\"tcp\", \"localhost:8888\", time.Second*3)\r\n}\r\n\r\nfunc main() {\r\n\tclient, err := arpc.NewClient(dialer)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"NewClient failed: %v\", err)\r\n\t}\r\n\tdefer client.Stop()\r\n\r\n\trequest := \"hello\"\r\n\tresponse := \"\"\r\n\t// err = client.Call(\"/echo\", &request, &response, time.Second*5)\r\n\terr = client.CallWith(context.Background(), \"/echo\", &request, &response)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Call /echo failed: %v\", err)\r\n\t} else {\r\n\t\tlog.Printf(\"Call /echo Response: \\\"%v\\\"\", response)\r\n\t}\r\n}\r\n```\r\n\r\n## 二、传统主流的 RPC 框架的局限 /不爽\r\n\r\n### 1. 网络交互模式单一，无法支持更丰富的场景\r\n\r\n> 传统主流 **RPC** 的网络交互主要是 **[客户端到服务端，请求-应答]** 的模式，比较单一。按照这个模式以及顾名思义“远程过程调用”，其实 **HTTP** 也算是 **RPC** 的一种，只是由于其短连接和 **HTTP** 协议的文本编码格式等原因导致性能和资源的浪费，所以很少有直接把 **HTTP** 称为 **RPC** 。\r\n\r\n> 网络通信的本质是数据收发，客户端和服务端都可以随时主动发送消息给对方，比如**推送服务**、**IM**、**游戏**等；而且一方发送数据给另一方，有时是不需要回复的，比如**VOIP 电话**，其他不要求强一致的消息广播、推送等。\r\n \r\n> 这里把需要应答的通信定义为 **Call** ，不需要应答的通信定义为 **Notify**，则网络交互按照发起方、是否需要应答，可以分为以下四种基本模式：\r\n\r\n>> 1 ）客户端发起请求，服务端应答\r\n\r\n>> 2 ）服务端发起请求，客户端应答\r\n\r\n>> 3 ）客户端向服务端发出通知 /推送，无需应答\r\n\r\n>> 4 ）客户端向服务端发出通知 /推送，无需应答\r\n\r\n> 如此看来，传统主流 **RPC** 就像是个大内男公务员，因为它只支持了第一种基本模式，只覆盖了 25%——甚至说它的网络通讯模式有点不完整，都算是一种褒奖，因为 25%的模式支持那是相当不完整。\r\n\r\n> 而只支持请求-应答的模式也限制了很多业务场景，其他更广泛的业务场景比如**推送服务**、**IM**、**游戏**，我们还需要自定义各种协议。\r\n\r\n### 2. Server 端函数调用的写法，函数返回即是调用结束，不够灵活\r\n\r\n> 传统主流 **RPC** 服务端的写法通常是一个函数，函数返回后框架层把返回值打包发送给客户端作为应答，不支持在该函数中进行异步响应，尤其是 golang 的 **RPC** ，有的框架为了代码简单，没有写协程，发送数据时直接写到 Conn，高并发写时竞争比较明显会增加时延；有的框架默认采用读协程收到数据 one-by-one 的方式处理，存在线头阻塞的问题，有的框架采用每个消息新开一个 go 协程处理，高并发时协程数量可能暴增、比较浪费，不支持按单个 Method/Router 定制同步或者异步处理，也不支持在 Method/Router handler 内由业务层自主选择同步处理、新开 go 协程异步或者协程池等异步等方式的处理。\r\n\r\n## 三、关于 ARPC\r\n\r\n### 1. 高性能\r\n\r\n> 想说 **ARPC** 比其他流行的 **golang RPC** 性能都好，但是自吹最强好像没有说服力，感谢 [rpcx]( https://github.com/smallnest/rpcx) 有做一些主流 **RPC** 框架的性能对比，[老仓库]( https://github.com/rpcx-ecosystem/rpcx-benchmark) 已经废弃并且那时 **ARPC** 还没有出生，有兴趣的同学可以到 [新仓库]( https://github.com/rpcxio/rpcx-benchmark) 跑下代码进行对比，测试时请注意排除其他程序的干扰。\r\n\r\n> 目前最为主流的 **gRPC** 因为官方综合考量使用了 **HTTP2** ，详情参考 [gRPC 的动机和设计原则]( https://grpc.io/blog/principles)，注定了不能很高性能。而很多 **RPC** 的业务场景，是基于内部服务集群， **HTTP2** 的加密流程等显得有些性能浪费。而 **ARPC** 更注重性能和灵活性，通信协议部分交由业务层决定，通常建议使用 **TCP** 作为基础通信协议，如有需要，业务层也可以使用 **TLS** 、**Websocket** 或者 **KCP** 等 。\r\n\r\n\r\n### 2. 网络交互模式全面\r\n\r\n> 上面在 [不爽](#1-网络交互模式单一无法支持更丰富的场景) 的部分提到了传统主流 **RPC** 的不完整， **ARPC** 当然要比较全面的支持这四种基本交互模式：\r\n\r\n\r\n>> 1 ）客户端发起请求，服务端应答\r\n\r\n>> 2 ）服务端发起请求，客户端应答\r\n\r\n>> 3 ）客户端向服务端发出通知 /推送，无需应答\r\n\r\n>> 4 ）客户端向服务端发出通知 /推送，无需应答\r\n\r\n### 3. 丰富的业务场景支持\r\n\r\n> 由于网络交互模式相对全面，**ARPC** 可以用于处理多种常规业务场景而不受类似 HTTP 短链接、单向请求-应答方式的限制。比如：\r\n\r\n>> 1 ）推送服务\r\n \r\n>> 2 ）游戏服务\r\n\r\n>> 3 ）聊天服务\r\n\r\n>> 4 ）其他需要长连接、双向、广播等灵活交互方式的业务\r\n\r\n\r\n### 4. 写法简单\r\n\r\n> 如[示例](#rpc 进化--arpc-项目自荐)所示，Handler 不采用函数返回即调用结束的形式，写法简单、更像 HTTP Handler 。由于也不强制使用编解码器，甚至不必生成结构化消息或者服务如 Protobuf 的 Message 、Service 等，这样也带来一些额外的好处，比如热点的结构化数据，业务层可以在数据更新时序列化一次并缓存起来，有需要时直接发送序列化之后的数据给需求方，避免每次发送给每个连接都需要进行一次序列化的浪费，在高在线量的广播类业务中这点尤为明显。\r\n\r\n> 其他一些 **RPC** 框架喜欢注册对象的方式，由框架层通过反射去解析符合 Handler 格式的方法进行隐式注册，由于早年被 C++的各种语言标准、机制等背后动作玩弄得辛苦，golang 项目中希望框架层和业务层都尽量不让用户增加没有必要的心智负担（比如通过对象隐式注册的方式：没有带来性能提升，没有架构设计模块设计的解耦或者其他优化）， **ARPC** 的设计遵循简单、透明的原则，所以像 **HTTP** 一样进行显式注册，如果有的同行喜欢玩弄语法糖技巧或者被语法糖技巧玩弄，可以自行定制。\r\n\r\n### 5. 更灵活的同步异步\r\n\r\n> 支持单个 Method/Router Handler 级别设置同步或者异步处理，也支持 Handler 内由业务层自主控制同步或异步回包、从而针对性定制快 /慢接口的协程数量控制与线头阻塞问题处理。\r\n\r\n### 6. 最少依赖\r\n\r\n> 目前如果只使用 **ARPC** 默认参数，则只使用了 golang 标准库，不需要依赖其他第三方 package 。\r\n\r\n### 7. 易扩展\r\n\r\n> 1 ）网络协议支持：由用户自主决定，服务端实现 net.Listener 、客户端实现 net.Conn 即可做为 **ARPC** 的网络载体，[arpc/examples/protocols]( https://github.com/lesismal/arpc/tree/master/examples/protocols) 已经提供了 **KCP** 、 **QUIC** 、 **TLS** 、 **UnixSocket** 、 **UTP** 、 **Websocket** 等示例，欢迎参考。\r\n\r\n> 2 ）非结构化的消息体编解码支持：可以直接用 string 、 *string 、 []byte 、 *[]byte 、error 、 *error 等作为消息体参数。\r\n\r\n> 3 ）结构化的消息体编解码支持：为了最少依赖， **ARPC** 默认使用了 encoding/json 作为结构化消息体的编解码器，性能不够强，但是业务层可以很方便地设置使用 json-iter 、Protobuf 等作为结构化消息地编解码器。\r\n\r\n> 4 ）消息体编解码中间件支持： **ARPC** 提供了消息体编解码中间件机制， [arpc/extension/middleware/coder]( https://github.com/lesismal/arpc/tree/master/extension/middleware/coder) 子包实现了 [Gzip]( https://github.com/lesismal/arpc/tree/master/extension/middleware/coder/gzip) 、 [Tracer]( https://github.com/lesismal/arpc/tree/master/extension/middleware/coder/tracer) 作为默认示例，有需要的用户可以参考实现自行定制，使用示例在  [arpc/examples/middleware/coder]( https://github.com/lesismal/arpc/tree/master/examples/middleware/coder) 。\r\n\r\n> 5 ） Method/Router 的中间件支持： **ARPC** 提供了类似流行的 golang HTTP 框架的中间件，方便业务层自行扩展， [arpc/extension/middleware/router]( https://github.com/lesismal/arpc/tree/master/extension/middleware/router) 子包实现了 **Logger** 、 **Recover** 、 **Graceful** 作为默认示例，有需要的用户可以参考并实现自行定制，使用示例在  [arpc/examples/middleware/router]( https://github.com/lesismal/arpc/tree/master/examples/middleware/router)\r\n\r\n> 6 ） Web JS Client 支持： **ARPC** 提供了 [JS Client]( https://github.com/lesismal/arpc/blob/master/extension/jsclient/arpc.js) 及示例：[API 示例]( https://github.com/lesismal/arpc/blob/master/examples/protocols/websocket/jsclient/hello.html) 、 [聊天示例]( https://github.com/lesismal/arpc/tree/master/examples/webchat)。有了 JS Client， 不需要类似其他 RPC 框架那样部署 HTTP 转换 RPC 的网关，前端可以直接通过 **Websocket** 与 **ARPC** 服务进行交互，而且因为 **ARPC** 已经包括了消息的编解码、Method/Router Handler，比 **melody** 等只封装了收发数据的基础 websocket 框架更方便。\r\n\r\n> 其他扩展不一一列举了，欢迎有兴趣的同学查看代码或者 New issue 。\r\n\r\n\r\n### 8. 更多示例\r\n\r\n> [arpc/examples]( https://github.com/lesismal/arpc/tree/master/examples)提供了较为丰富的示例，如 **通知** 、 **广播** 、 **优雅退出** 、 **服务注册与发现** 、 **连接池** 、 **kcp/quic/tls/websocket 等协议支持** 、 **发布订阅** 、 **JS Web Chat** 等，请见 [arpc/examples]( https://github.com/lesismal/arpc/tree/master/examples) 。\r\n\r\n### 9. 其他\r\n\r\n> 个人精力有限，并且 golang 是世界上第二好的编程语言，所以暂时不考虑对其他语言的支持，欢迎 pr 、issue 。",
        "content_rendered": "<p>已加入 <a href=\"https://github.com/avelino/awesome-go#distributed-systems\" rel=\"nofollow\">awesome-go</a></p>\n<h1><strong>RPC</strong> 的变革 —— <strong>ARPC</strong> 项目自荐</h1>\n<p>项目地址： <a href=\"https://github.com/lesismal/arpc\" rel=\"nofollow\">https://github.com/lesismal/arpc</a></p>\n<h2>一、<strong>ARPC</strong> 示例</h2>\n<h3><strong>echo server</strong></h3>\n<pre><code class=\"language-golang\">package main\n\nimport (\n\t\"log\"\n\n\t\"github.com/lesismal/arpc\"\n)\n\nfunc onEcho(ctx *arpc.Context) {\n\tstr := \"\"\n\terr := ctx.Bind(&amp;str)\n\tif err != nil {\n\t\tlog.Printf(\"/echo error: %v\", err)\n\t\treturn\n\t}\n\tctx.Write(str)\n\tlog.Printf(\"/echo: %v\", str)\n}\n\nfunc main() {\n\tsvr := arpc.NewServer()\n\n\t// register handler\n\tsvr.Handler.Handle(\"/echo\", onEcho)\n\n\tsvr.Run(\":8888\")\n}\n</code></pre>\n<h3><strong>echo client</strong></h3>\n<pre><code class=\"language-golang\">package main\n\nimport (\n\t\"context\"\n\t\"log\"\n\t\"net\"\n\t\"time\"\n\n\t\"github.com/lesismal/arpc\"\n)\n\nfunc dialer() (net.Conn, error) {\n\treturn net.DialTimeout(\"tcp\", \"localhost:8888\", time.Second*3)\n}\n\nfunc main() {\n\tclient, err := arpc.NewClient(dialer)\n\tif err != nil {\n\t\tlog.Fatalf(\"NewClient failed: %v\", err)\n\t}\n\tdefer client.Stop()\n\n\trequest := \"hello\"\n\tresponse := \"\"\n\t// err = client.Call(\"/echo\", &amp;request, &amp;response, time.Second*5)\n\terr = client.CallWith(context.Background(), \"/echo\", &amp;request, &amp;response)\n\tif err != nil {\n\t\tlog.Fatalf(\"Call /echo failed: %v\", err)\n\t} else {\n\t\tlog.Printf(\"Call /echo Response: \\\"%v\\\"\", response)\n\t}\n}\n</code></pre>\n<h2>二、传统主流的 RPC 框架的局限 /不爽</h2>\n<h3>1. 网络交互模式单一，无法支持更丰富的场景</h3>\n<blockquote>\n<p>传统主流 <strong>RPC</strong> 的网络交互主要是 <strong>[客户端到服务端，请求-应答]</strong> 的模式，比较单一。按照这个模式以及顾名思义“远程过程调用”，其实 <strong>HTTP</strong> 也算是 <strong>RPC</strong> 的一种，只是由于其短连接和 <strong>HTTP</strong> 协议的文本编码格式等原因导致性能和资源的浪费，所以很少有直接把 <strong>HTTP</strong> 称为 <strong>RPC</strong> 。</p>\n</blockquote>\n<blockquote>\n<p>网络通信的本质是数据收发，客户端和服务端都可以随时主动发送消息给对方，比如<strong>推送服务</strong>、<strong>IM</strong>、<strong>游戏</strong>等；而且一方发送数据给另一方，有时是不需要回复的，比如<strong>VOIP 电话</strong>，其他不要求强一致的消息广播、推送等。</p>\n</blockquote>\n<blockquote>\n<p>这里把需要应答的通信定义为 <strong>Call</strong> ，不需要应答的通信定义为 <strong>Notify</strong>，则网络交互按照发起方、是否需要应答，可以分为以下四种基本模式：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>1 ）客户端发起请求，服务端应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>2 ）服务端发起请求，客户端应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>3 ）客户端向服务端发出通知 /推送，无需应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>4 ）客户端向服务端发出通知 /推送，无需应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>如此看来，传统主流 <strong>RPC</strong> 就像是个大内男公务员，因为它只支持了第一种基本模式，只覆盖了 25%——甚至说它的网络通讯模式有点不完整，都算是一种褒奖，因为 25%的模式支持那是相当不完整。</p>\n</blockquote>\n<blockquote>\n<p>而只支持请求-应答的模式也限制了很多业务场景，其他更广泛的业务场景比如<strong>推送服务</strong>、<strong>IM</strong>、<strong>游戏</strong>，我们还需要自定义各种协议。</p>\n</blockquote>\n<h3>2. Server 端函数调用的写法，函数返回即是调用结束，不够灵活</h3>\n<blockquote>\n<p>传统主流 <strong>RPC</strong> 服务端的写法通常是一个函数，函数返回后框架层把返回值打包发送给客户端作为应答，不支持在该函数中进行异步响应，尤其是 golang 的 <strong>RPC</strong> ，有的框架为了代码简单，没有写协程，发送数据时直接写到 Conn，高并发写时竞争比较明显会增加时延；有的框架默认采用读协程收到数据 one-by-one 的方式处理，存在线头阻塞的问题，有的框架采用每个消息新开一个 go 协程处理，高并发时协程数量可能暴增、比较浪费，不支持按单个 Method/Router 定制同步或者异步处理，也不支持在 Method/Router handler 内由业务层自主选择同步处理、新开 go 协程异步或者协程池等异步等方式的处理。</p>\n</blockquote>\n<h2>三、关于 ARPC</h2>\n<h3>1. 高性能</h3>\n<blockquote>\n<p>想说 <strong>ARPC</strong> 比其他流行的 <strong>golang RPC</strong> 性能都好，但是自吹最强好像没有说服力，感谢 <a href=\"https://github.com/smallnest/rpcx\" rel=\"nofollow\">rpcx</a> 有做一些主流 <strong>RPC</strong> 框架的性能对比，<a href=\"https://github.com/rpcx-ecosystem/rpcx-benchmark\" rel=\"nofollow\">老仓库</a> 已经废弃并且那时 <strong>ARPC</strong> 还没有出生，有兴趣的同学可以到 <a href=\"https://github.com/rpcxio/rpcx-benchmark\" rel=\"nofollow\">新仓库</a> 跑下代码进行对比，测试时请注意排除其他程序的干扰。</p>\n</blockquote>\n<blockquote>\n<p>目前最为主流的 <strong>gRPC</strong> 因为官方综合考量使用了 <strong>HTTP2</strong> ，详情参考 <a href=\"https://grpc.io/blog/principles\" rel=\"nofollow\">gRPC 的动机和设计原则</a>，注定了不能很高性能。而很多 <strong>RPC</strong> 的业务场景，是基于内部服务集群， <strong>HTTP2</strong> 的加密流程等显得有些性能浪费。而 <strong>ARPC</strong> 更注重性能和灵活性，通信协议部分交由业务层决定，通常建议使用 <strong>TCP</strong> 作为基础通信协议，如有需要，业务层也可以使用 <strong>TLS</strong> 、<strong>Websocket</strong> 或者 <strong>KCP</strong> 等 。</p>\n</blockquote>\n<h3>2. 网络交互模式全面</h3>\n<blockquote>\n<p>上面在 <a href=\"#1-%E7%BD%91%E7%BB%9C%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%B8%80%E6%97%A0%E6%B3%95%E6%94%AF%E6%8C%81%E6%9B%B4%E4%B8%B0%E5%AF%8C%E7%9A%84%E5%9C%BA%E6%99%AF\" rel=\"nofollow\">不爽</a> 的部分提到了传统主流 <strong>RPC</strong> 的不完整， <strong>ARPC</strong> 当然要比较全面的支持这四种基本交互模式：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>1 ）客户端发起请求，服务端应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>2 ）服务端发起请求，客户端应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>3 ）客户端向服务端发出通知 /推送，无需应答</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>4 ）客户端向服务端发出通知 /推送，无需应答</p>\n</blockquote>\n</blockquote>\n<h3>3. 丰富的业务场景支持</h3>\n<blockquote>\n<p>由于网络交互模式相对全面，<strong>ARPC</strong> 可以用于处理多种常规业务场景而不受类似 HTTP 短链接、单向请求-应答方式的限制。比如：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>1 ）推送服务</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>2 ）游戏服务</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>3 ）聊天服务</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>4 ）其他需要长连接、双向、广播等灵活交互方式的业务</p>\n</blockquote>\n</blockquote>\n<h3>4. 写法简单</h3>\n<blockquote>\n<p>如[示例](#rpc 进化--arpc-项目自荐)所示，Handler 不采用函数返回即调用结束的形式，写法简单、更像 HTTP Handler 。由于也不强制使用编解码器，甚至不必生成结构化消息或者服务如 Protobuf 的 Message 、Service 等，这样也带来一些额外的好处，比如热点的结构化数据，业务层可以在数据更新时序列化一次并缓存起来，有需要时直接发送序列化之后的数据给需求方，避免每次发送给每个连接都需要进行一次序列化的浪费，在高在线量的广播类业务中这点尤为明显。</p>\n</blockquote>\n<blockquote>\n<p>其他一些 <strong>RPC</strong> 框架喜欢注册对象的方式，由框架层通过反射去解析符合 Handler 格式的方法进行隐式注册，由于早年被 C++的各种语言标准、机制等背后动作玩弄得辛苦，golang 项目中希望框架层和业务层都尽量不让用户增加没有必要的心智负担（比如通过对象隐式注册的方式：没有带来性能提升，没有架构设计模块设计的解耦或者其他优化）， <strong>ARPC</strong> 的设计遵循简单、透明的原则，所以像 <strong>HTTP</strong> 一样进行显式注册，如果有的同行喜欢玩弄语法糖技巧或者被语法糖技巧玩弄，可以自行定制。</p>\n</blockquote>\n<h3>5. 更灵活的同步异步</h3>\n<blockquote>\n<p>支持单个 Method/Router Handler 级别设置同步或者异步处理，也支持 Handler 内由业务层自主控制同步或异步回包、从而针对性定制快 /慢接口的协程数量控制与线头阻塞问题处理。</p>\n</blockquote>\n<h3>6. 最少依赖</h3>\n<blockquote>\n<p>目前如果只使用 <strong>ARPC</strong> 默认参数，则只使用了 golang 标准库，不需要依赖其他第三方 package 。</p>\n</blockquote>\n<h3>7. 易扩展</h3>\n<blockquote>\n<p>1 ）网络协议支持：由用户自主决定，服务端实现 net.Listener 、客户端实现 net.Conn 即可做为 <strong>ARPC</strong> 的网络载体，<a href=\"https://github.com/lesismal/arpc/tree/master/examples/protocols\" rel=\"nofollow\">arpc/examples/protocols</a> 已经提供了 <strong>KCP</strong> 、 <strong>QUIC</strong> 、 <strong>TLS</strong> 、 <strong>UnixSocket</strong> 、 <strong>UTP</strong> 、 <strong>Websocket</strong> 等示例，欢迎参考。</p>\n</blockquote>\n<blockquote>\n<p>2 ）非结构化的消息体编解码支持：可以直接用 string 、 *string 、 []byte 、 *[]byte 、error 、 *error 等作为消息体参数。</p>\n</blockquote>\n<blockquote>\n<p>3 ）结构化的消息体编解码支持：为了最少依赖， <strong>ARPC</strong> 默认使用了 encoding/json 作为结构化消息体的编解码器，性能不够强，但是业务层可以很方便地设置使用 json-iter 、Protobuf 等作为结构化消息地编解码器。</p>\n</blockquote>\n<blockquote>\n<p>4 ）消息体编解码中间件支持： <strong>ARPC</strong> 提供了消息体编解码中间件机制， <a href=\"https://github.com/lesismal/arpc/tree/master/extension/middleware/coder\" rel=\"nofollow\">arpc/extension/middleware/coder</a> 子包实现了 <a href=\"https://github.com/lesismal/arpc/tree/master/extension/middleware/coder/gzip\" rel=\"nofollow\">Gzip</a> 、 <a href=\"https://github.com/lesismal/arpc/tree/master/extension/middleware/coder/tracer\" rel=\"nofollow\">Tracer</a> 作为默认示例，有需要的用户可以参考实现自行定制，使用示例在  <a href=\"https://github.com/lesismal/arpc/tree/master/examples/middleware/coder\" rel=\"nofollow\">arpc/examples/middleware/coder</a> 。</p>\n</blockquote>\n<blockquote>\n<p>5 ） Method/Router 的中间件支持： <strong>ARPC</strong> 提供了类似流行的 golang HTTP 框架的中间件，方便业务层自行扩展， <a href=\"https://github.com/lesismal/arpc/tree/master/extension/middleware/router\" rel=\"nofollow\">arpc/extension/middleware/router</a> 子包实现了 <strong>Logger</strong> 、 <strong>Recover</strong> 、 <strong>Graceful</strong> 作为默认示例，有需要的用户可以参考并实现自行定制，使用示例在  <a href=\"https://github.com/lesismal/arpc/tree/master/examples/middleware/router\" rel=\"nofollow\">arpc/examples/middleware/router</a></p>\n</blockquote>\n<blockquote>\n<p>6 ） Web JS Client 支持： <strong>ARPC</strong> 提供了 <a href=\"https://github.com/lesismal/arpc/blob/master/extension/jsclient/arpc.js\" rel=\"nofollow\">JS Client</a> 及示例：<a href=\"https://github.com/lesismal/arpc/blob/master/examples/protocols/websocket/jsclient/hello.html\" rel=\"nofollow\">API 示例</a> 、 <a href=\"https://github.com/lesismal/arpc/tree/master/examples/webchat\" rel=\"nofollow\">聊天示例</a>。有了 JS Client， 不需要类似其他 RPC 框架那样部署 HTTP 转换 RPC 的网关，前端可以直接通过 <strong>Websocket</strong> 与 <strong>ARPC</strong> 服务进行交互，而且因为 <strong>ARPC</strong> 已经包括了消息的编解码、Method/Router Handler，比 <strong>melody</strong> 等只封装了收发数据的基础 websocket 框架更方便。</p>\n</blockquote>\n<blockquote>\n<p>其他扩展不一一列举了，欢迎有兴趣的同学查看代码或者 New issue 。</p>\n</blockquote>\n<h3>8. 更多示例</h3>\n<blockquote>\n<p><a href=\"https://github.com/lesismal/arpc/tree/master/examples\" rel=\"nofollow\">arpc/examples</a>提供了较为丰富的示例，如 <strong>通知</strong> 、 <strong>广播</strong> 、 <strong>优雅退出</strong> 、 <strong>服务注册与发现</strong> 、 <strong>连接池</strong> 、 <strong>kcp/quic/tls/websocket 等协议支持</strong> 、 <strong>发布订阅</strong> 、 <strong>JS Web Chat</strong> 等，请见 <a href=\"https://github.com/lesismal/arpc/tree/master/examples\" rel=\"nofollow\">arpc/examples</a> 。</p>\n</blockquote>\n<h3>9. 其他</h3>\n<blockquote>\n<p>个人精力有限，并且 golang 是世界上第二好的编程语言，所以暂时不考虑对其他语言的支持，欢迎 pr 、issue 。</p>\n</blockquote>\n",
        "last_modified": 1607704315,
        "replies": 3,
        "id": 734682
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1607656854",
            "name": "macos",
            "avatar_normal": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1607656854",
            "title": "macOS",
            "url": "https://www.v2ex.com/go/macos",
            "topics": 15783,
            "footer": "<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。",
            "header": "The world’s most advanced desktop operating system.",
            "title_alternative": "macOS",
            "avatar_mini": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1607656854",
            "stars": 4143,
            "aliases": [],
            "root": false,
            "id": 22,
            "parent_node_name": "os"
        },
        "member": {
            "username": "oxromantic",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/6041cdddddcd4083e6060c5cac36b656?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/oxromantic",
            "tagline": null,
            "twitter": null,
            "created": 1594964751,
            "avatar_large": "https://cdn.v2ex.com/gravatar/6041cdddddcd4083e6060c5cac36b656?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/6041cdddddcd4083e6060c5cac36b656?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 499583
        },
        "last_reply_by": "BrettD",
        "last_touched": 1607711433,
        "title": "恢复模式下压了下 Air M1 16+256 全盘缓外速度，有点失望",
        "url": "https://www.v2ex.com/t/734680",
        "created": 1607703998,
        "content": "测了几次\r\n\r\nif=/dev/random of=xx bs=1m 持续 933 秒，192.1 MB/s\r\nif=/dev/zero of=xx bs=1m 持续 367 秒，448.3 MB/s",
        "content_rendered": "测了几次<br /><br />if=/dev/random of=xx bs=1m 持续 933 秒，192.1 MB/s<br />if=/dev/zero of=xx bs=1m 持续 367 秒，448.3 MB/s",
        "last_modified": 1607704038,
        "replies": 3,
        "id": 734680
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1607351597",
            "name": "programmer",
            "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1607351597",
            "title": "程序员",
            "url": "https://www.v2ex.com/go/programmer",
            "topics": 42110,
            "footer": "",
            "header": "While code monkeys are not eating bananas, they're coding.",
            "title_alternative": "Programmer",
            "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1607351597",
            "stars": 7140,
            "aliases": [],
            "root": false,
            "id": 300,
            "parent_node_name": "computer"
        },
        "member": {
            "username": "lynn0977",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/lynn0977",
            "tagline": "",
            "twitter": "",
            "created": 1551758735,
            "avatar_large": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 389403
        },
        "last_reply_by": "way2explore2",
        "last_touched": 1607711820,
        "title": "为什么 cmder 被称作是终端模拟器(console emulators)，什么是真正意义的 console？",
        "url": "https://www.v2ex.com/t/734679",
        "created": 1607703553,
        "content": "并且 ConEmu 也被称作是终端模拟器，那什么是是真正的 console，cmd.exe 和 powershell ？",
        "content_rendered": "并且 ConEmu 也被称作是终端模拟器，那什么是是真正的 console，cmd.exe 和 powershell ？",
        "last_modified": 1607703553,
        "replies": 8,
        "id": 734679
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "haomm0328",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/b4a67793a9b8e0d3e6781d6c53988032?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/haomm0328",
            "tagline": null,
            "twitter": null,
            "created": 1607316996,
            "avatar_large": "https://cdn.v2ex.com/gravatar/b4a67793a9b8e0d3e6781d6c53988032?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/b4a67793a9b8e0d3e6781d6c53988032?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 522660
        },
        "last_reply_by": "alexkuang",
        "last_touched": 1607648305,
        "title": "用过一堆待办软件，包括番茄 todo，微软待办，滴答清单，阿里云 teambition 待办，要说没广告不要钱还是阿里 tb 待办最好用，要说功能上还是滴答清单比较完善，番茄广告多，微软特别卡，大家还有更好的推荐吗？",
        "url": "https://www.v2ex.com/t/734678",
        "created": 1607703286,
        "content": "",
        "content_rendered": "",
        "last_modified": 1607703286,
        "replies": 7,
        "id": 734678
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/a666/587a/326_large.png?m=1607656923",
            "name": "mba",
            "avatar_normal": "https://cdn.v2ex.com/navatar/a666/587a/326_normal.png?m=1607656923",
            "title": "MacBook Air",
            "url": "https://www.v2ex.com/go/mba",
            "topics": 432,
            "footer": "未来一代 MacBook 现已诞生",
            "header": "Apple 设计的最轻巧的笔记本电脑",
            "title_alternative": "MacBook Air",
            "avatar_mini": "https://cdn.v2ex.com/navatar/a666/587a/326_mini.png?m=1607656923",
            "stars": 336,
            "aliases": [],
            "root": false,
            "id": 326,
            "parent_node_name": "apple"
        },
        "member": {
            "username": "kirksea",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/efcea4a2130f01c43fd5968afa91d495?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/kirksea",
            "tagline": "",
            "twitter": "",
            "created": 1509506003,
            "avatar_large": "https://cdn.v2ex.com/gravatar/efcea4a2130f01c43fd5968afa91d495?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/efcea4a2130f01c43fd5968afa91d495?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 264088
        },
        "last_reply_by": "kirksea",
        "last_touched": 1607706192,
        "title": "MacBook Air M1 unexpected restart",
        "url": "https://www.v2ex.com/t/734677",
        "created": 1607702754,
        "content": "如题，用了小一个月，最近一周在使用多个 word 、PDF 和 Safari 时候会突然死机然后重启。小白一枚，请教可能什么原因，如何解决？谢谢！",
        "content_rendered": "如题，用了小一个月，最近一周在使用多个 word 、PDF 和 Safari 时候会突然死机然后重启。小白一枚，请教可能什么原因，如何解决？谢谢！",
        "last_modified": 1607703767,
        "replies": 2,
        "id": 734677
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1596015966",
            "name": "android",
            "avatar_normal": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1596015966",
            "title": "Android",
            "url": "https://www.v2ex.com/go/android",
            "topics": 8299,
            "footer": "",
            "header": "来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。",
            "title_alternative": "Android",
            "avatar_mini": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1596015966",
            "stars": 4644,
            "aliases": [],
            "root": false,
            "id": 39,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "lynn0977",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/lynn0977",
            "tagline": "",
            "twitter": "",
            "created": 1551758735,
            "avatar_large": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/ce4571738b0b2580366544d01b438bfa?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 389403
        },
        "last_reply_by": "Darkatse",
        "last_touched": 1607709161,
        "title": "1 加 8T 的使用体验",
        "url": "https://www.v2ex.com/t/734674",
        "created": 1607702232,
        "content": "之前一直用的是小米的手机，现在首次换到别的品牌，没买米 10 的原因是之前认为曲面屏不好，以及比较重，入手了 1 加 8T 用了两周，主要感受:\r\n优:\r\n1. 系统广告很少\r\n2. 充电速度很快\r\n3.系统流畅\r\n差:\r\n1.基本功能不缺，但是小的功能点不够人性化，例如息屏状态下，我想在微信有消息时可以显示通知，且只显示通知，但是做不到，只能始终开始息屏显示，时间和电量显示占了大部分面积，消息通知只有一个小图标反而很不明显，得刻意去分辨有没有通知，怀念之前的呼吸灯，瞟一眼就知道有没有通知。(还是我没找到方法？)\r\n\r\n2.直屏的体验也不如想象中的好，手机前后都是玻璃材质，只能贴膜带套，手机壳边缘总会比屏幕高一点，贴膜的边缘也可以感知到，导致左右滑屏返回很咯手，体验不好，我已经切成虚拟按键的方式了。\r\n\r\n3. 系统遇到两次偶然的 bug，切程序的时候一直闪屏，以及虚拟按键卡顿严重。\r\n\r\n4.拍照用得最多的是用来拍电脑屏幕，但是清晰度还不如我 5 年前的小米，对焦也拉跨。不过拍室外还行。\r\n\r\n总体的体验还行，目前打算主力机继续用，寄希望后面系统还能再完善一点，不过从网上信息看，好像基本是奢望。",
        "content_rendered": "之前一直用的是小米的手机，现在首次换到别的品牌，没买米 10 的原因是之前认为曲面屏不好，以及比较重，入手了 1 加 8T 用了两周，主要感受:<br />优:<br />1. 系统广告很少<br />2. 充电速度很快<br />3.系统流畅<br />差:<br />1.基本功能不缺，但是小的功能点不够人性化，例如息屏状态下，我想在微信有消息时可以显示通知，且只显示通知，但是做不到，只能始终开始息屏显示，时间和电量显示占了大部分面积，消息通知只有一个小图标反而很不明显，得刻意去分辨有没有通知，怀念之前的呼吸灯，瞟一眼就知道有没有通知。(还是我没找到方法？)<br /><br />2.直屏的体验也不如想象中的好，手机前后都是玻璃材质，只能贴膜带套，手机壳边缘总会比屏幕高一点，贴膜的边缘也可以感知到，导致左右滑屏返回很咯手，体验不好，我已经切成虚拟按键的方式了。<br /><br />3. 系统遇到两次偶然的 bug，切程序的时候一直闪屏，以及虚拟按键卡顿严重。<br /><br />4.拍照用得最多的是用来拍电脑屏幕，但是清晰度还不如我 5 年前的小米，对焦也拉跨。不过拍室外还行。<br /><br />总体的体验还行，目前打算主力机继续用，寄希望后面系统还能再完善一点，不过从网上信息看，好像基本是奢望。",
        "last_modified": 1607702232,
        "replies": 4,
        "id": 734674
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1607656837",
            "name": "apple",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1607656837",
            "title": "Apple",
            "url": "https://www.v2ex.com/go/apple",
            "topics": 13227,
            "footer": "",
            "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。",
            "title_alternative": "Apple",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1607656837",
            "stars": 1630,
            "aliases": [],
            "root": false,
            "id": 184,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "rophie123",
            "website": "",
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/5c8d369b073fddd235c018d1235eae31?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/rophie123",
            "tagline": "",
            "twitter": null,
            "created": 1549801485,
            "avatar_large": "https://cdn.v2ex.com/gravatar/5c8d369b073fddd235c018d1235eae31?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/5c8d369b073fddd235c018d1235eae31?s=24&d=retro",
            "location": "",
            "btc": null,
            "id": 382760
        },
        "last_reply_by": "minamike",
        "last_touched": 1607703294,
        "title": "妙控鼠标滚轮失灵重新连接又好了",
        "url": "https://www.v2ex.com/t/734673",
        "created": 1607701745,
        "content": "最近买了两年的妙控鼠标偶尔滚轮失灵了，开关一次重新连接就正常了，一天得五次以上，烦死了，到底是坏了还是啥原因？有个准信好买新的",
        "content_rendered": "<p>最近买了两年的妙控鼠标偶尔滚轮失灵了，开关一次重新连接就正常了，一天得五次以上，烦死了，到底是坏了还是啥原因？有个准信好买新的</p>\n",
        "last_modified": 1607701745,
        "replies": 2,
        "id": 734673
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "eluotao",
            "website": "https://lele.im",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/501b/5d85/268860_mini.png?m=1571559486",
            "bio": "https://www.bilibili.com",
            "url": "https://www.v2ex.com/u/eluotao",
            "tagline": "努力工作，35岁就退休！",
            "twitter": "",
            "created": 1511237876,
            "avatar_large": "https://cdn.v2ex.com/avatar/501b/5d85/268860_mini.png?m=1571559486",
            "avatar_mini": "https://cdn.v2ex.com/avatar/501b/5d85/268860_mini.png?m=1571559486",
            "location": "深圳",
            "btc": "",
            "id": 268860
        },
        "last_reply_by": "",
        "last_touched": 1607183162,
        "title": "有没有办法拦截所有*.baidu.com 的域名指向到本地 localhost",
        "url": "https://www.v2ex.com/t/734672",
        "created": 1607701622,
        "content": "想拦截所有 a.baidu.com b.baidu.com *.baidu.com 的域名\r\n\r\n修改 hosts\r\n127.0.0.1 *.baidu.com  是无效的\r\n有什么办法在不知道二级域名 三级域名是什么的情况下  直接暴利屏蔽所有域名吗?",
        "content_rendered": "想拦截所有 <a target=\"_blank\" href=\"http://a.baidu.com\" rel=\"nofollow noopener\">a.baidu.com</a> <a target=\"_blank\" href=\"http://b.baidu.com\" rel=\"nofollow noopener\">b.baidu.com</a> *.baidu.com 的域名<br /><br />修改 hosts<br />127.0.0.1 *.baidu.com  是无效的<br />有什么办法在不知道二级域名 三级域名是什么的情况下  直接暴利屏蔽所有域名吗?",
        "last_modified": 1607701622,
        "replies": 0,
        "id": 734672
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1607656837",
            "name": "apple",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1607656837",
            "title": "Apple",
            "url": "https://www.v2ex.com/go/apple",
            "topics": 13227,
            "footer": "",
            "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。",
            "title_alternative": "Apple",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1607656837",
            "stars": 1630,
            "aliases": [],
            "root": false,
            "id": 184,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "wwmmkk",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "bio": "",
            "url": "https://www.v2ex.com/u/wwmmkk",
            "tagline": "",
            "twitter": "",
            "created": 1300620401,
            "avatar_large": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "avatar_mini": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "location": "",
            "btc": "",
            "id": 7200
        },
        "last_reply_by": "wwmmkk",
        "last_touched": 1607640988,
        "title": "Big Sur 和 iOS14 之间的 Handoff 和共享剪贴板失效了",
        "url": "https://www.v2ex.com/t/734670",
        "created": 1607699924,
        "content": "两台 macOS 11.0.1 的 MBP 之间，Handoff 和 共享剪贴板都正常；\r\n两台 iOS 14.2 的 iPhone 和 iPad 之间也正常；\r\nMBP 和 iPad 之间也正常；\r\nMBP 和 iPhone 之间，Handoff 和共享剪贴板都失效了。\r\n\r\n尝试重新开启 Handoff 开关、iPhone 与 Mac 蓝牙重新配对、重启设备，均无效。。\r\n不知道有没有高人指教下。。",
        "content_rendered": "两台 macOS 11.0.1 的 MBP 之间，Handoff 和 共享剪贴板都正常；<br />两台 iOS 14.2 的 iPhone 和 iPad 之间也正常；<br />MBP 和 iPad 之间也正常；<br />MBP 和 iPhone 之间，Handoff 和共享剪贴板都失效了。<br /><br />尝试重新开启 Handoff 开关、iPhone 与 Mac 蓝牙重新配对、重启设备，均无效。。<br />不知道有没有高人指教下。。",
        "last_modified": 1607699951,
        "replies": 3,
        "id": 734670
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1596015966",
            "name": "android",
            "avatar_normal": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1596015966",
            "title": "Android",
            "url": "https://www.v2ex.com/go/android",
            "topics": 8299,
            "footer": "",
            "header": "来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。",
            "title_alternative": "Android",
            "avatar_mini": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1596015966",
            "stars": 4644,
            "aliases": [],
            "root": false,
            "id": 39,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "dingwen07",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/a0b38f435e557e3b43687517e25b59de?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/dingwen07",
            "tagline": "",
            "twitter": "",
            "created": 1546601570,
            "avatar_large": "https://cdn.v2ex.com/gravatar/a0b38f435e557e3b43687517e25b59de?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/a0b38f435e557e3b43687517e25b59de?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 375269
        },
        "last_reply_by": "proxychains",
        "last_touched": 1607709049,
        "title": "为什么国产 APP 喜欢声明闪光灯权限？",
        "url": "https://www.v2ex.com/t/734668",
        "created": 1607699843,
        "content": "在 Google Play 看了下常见的国产应用所声明的权限，发现几乎所有都声明了 'android.permission.FLASHLIGHT'。这个权限只能用来控制闪光灯，而获取'android.permission.CAMERA'之后也能控制闪光灯，和就是说想要控制闪光灯而不希望激活相机才有必要申请这个权限。\n\n\n\n![QQ]( https://i.loli.net/2020/12/11/MkCcXBLRmY6vFlE.png)\n\n![WeChat]( https://i.loli.net/2020/12/11/IRrw5aXntmC7YKV.png)\n\n![Taobao]( https://i.loli.net/2020/12/11/JhfvuByPp9nXTxj.png)\n\n![Alipay]( https://i.loli.net/2020/12/11/hSVIv6iXGsWOLAr.png)",
        "content_rendered": "<p>在 Google Play 看了下常见的国产应用所声明的权限，发现几乎所有都声明了 'android.permission.FLASHLIGHT'。这个权限只能用来控制闪光灯，而获取'android.permission.CAMERA'之后也能控制闪光灯，和就是说想要控制闪光灯而不希望激活相机才有必要申请这个权限。</p>\n<p><img alt=\"QQ\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2020/12/11/MkCcXBLRmY6vFlE.png\"/></p>\n<p><img alt=\"WeChat\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2020/12/11/IRrw5aXntmC7YKV.png\"/></p>\n<p><img alt=\"Taobao\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2020/12/11/JhfvuByPp9nXTxj.png\"/></p>\n<p><img alt=\"Alipay\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2020/12/11/hSVIv6iXGsWOLAr.png\"/></p>\n",
        "last_modified": 1607701314,
        "replies": 13,
        "id": 734668
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "Blackcatli",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/d5a63edf89146bb874b963e94a2635f3?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/Blackcatli",
            "tagline": null,
            "twitter": null,
            "created": 1607253450,
            "avatar_large": "https://cdn.v2ex.com/gravatar/d5a63edf89146bb874b963e94a2635f3?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/d5a63edf89146bb874b963e94a2635f3?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 522561
        },
        "last_reply_by": "alexkuang",
        "last_touched": 1607688551,
        "title": "看阿里云 T 盘热火朝天，不知道大家体验没 teambition 的其他功能，项目和待办是相通的，在项目里设置的任务会显示在待办提醒中，就是目前不知道待办怎么设置能到项目中去？",
        "url": "https://www.v2ex.com/t/734667",
        "created": 1607699651,
        "content": "",
        "content_rendered": "",
        "last_modified": 1607699651,
        "replies": 1,
        "id": 734667
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/44f6/83a8/62_large.png?m=1588705541",
            "name": "php",
            "avatar_normal": "https://cdn.v2ex.com/navatar/44f6/83a8/62_normal.png?m=1588705541",
            "title": "PHP",
            "url": "https://www.v2ex.com/go/php",
            "topics": 4241,
            "footer": "",
            "header": "PHP is a widely-used general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.",
            "title_alternative": "PHP",
            "avatar_mini": "https://cdn.v2ex.com/navatar/44f6/83a8/62_mini.png?m=1588705541",
            "stars": 2543,
            "aliases": [],
            "root": false,
            "id": 62,
            "parent_node_name": "programming"
        },
        "member": {
            "username": "nonfu",
            "website": "https://xueyuanjun.com",
            "github": "nonfu",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/d7a0/83d7/115853_mini.png?m=1464885039",
            "bio": "",
            "url": "https://www.v2ex.com/u/nonfu",
            "tagline": "终身学习者",
            "twitter": "",
            "created": 1431060531,
            "avatar_large": "https://cdn.v2ex.com/avatar/d7a0/83d7/115853_mini.png?m=1464885039",
            "avatar_mini": "https://cdn.v2ex.com/avatar/d7a0/83d7/115853_mini.png?m=1464885039",
            "location": "杭州",
            "btc": "",
            "id": 115853
        },
        "last_reply_by": "lepig",
        "last_touched": 1607699198,
        "title": "Laravel 官方提供了基于 Docker 的本地开发环境解决方案",
        "url": "https://www.v2ex.com/t/734665",
        "created": 1607698710,
        "content": "官方文档：[Laravel Sail]( https://xueyuanjun.com/post/22167)\r\n\r\n实例教程：[通过 Sail 构建基于 Docker 的 Laravel 本地集成开发环境]( https://xueyuanjun.com/post/22173)",
        "content_rendered": "<p>官方文档：<a href=\"https://xueyuanjun.com/post/22167\" rel=\"nofollow\">Laravel Sail</a></p>\n<p>实例教程：<a href=\"https://xueyuanjun.com/post/22173\" rel=\"nofollow\">通过 Sail 构建基于 Docker 的 Laravel 本地集成开发环境</a></p>\n",
        "last_modified": 1607698734,
        "replies": 1,
        "id": 734665
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1607656837",
            "name": "apple",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1607656837",
            "title": "Apple",
            "url": "https://www.v2ex.com/go/apple",
            "topics": 13227,
            "footer": "",
            "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。",
            "title_alternative": "Apple",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1607656837",
            "stars": 1630,
            "aliases": [],
            "root": false,
            "id": 184,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "gps949",
            "website": "https://www.gps949.com",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/9b1f/5876/168580_mini.png?m=1518423497",
            "bio": "",
            "url": "https://www.v2ex.com/u/gps949",
            "tagline": "",
            "twitter": "",
            "created": 1460809273,
            "avatar_large": "https://cdn.v2ex.com/avatar/9b1f/5876/168580_mini.png?m=1518423497",
            "avatar_mini": "https://cdn.v2ex.com/avatar/9b1f/5876/168580_mini.png?m=1518423497",
            "location": "",
            "btc": "",
            "id": 168580
        },
        "last_reply_by": "Cooky",
        "last_touched": 1607704839,
        "title": "封装了个 App 在 M1 MacBookAir 上跑 WIn10 虚拟机",
        "url": "https://www.v2ex.com/t/734664",
        "created": 1607698482,
        "content": "折腾两三天总算弄得方便平时使用了，感觉对我而言或许其实也就为了个 Visio……   \r\n\r\nhttps://www.bilibili.com/video/BV1Rz4y1k7KT",
        "content_rendered": "折腾两三天总算弄得方便平时使用了，感觉对我而言或许其实也就为了个 Visio……   <br /><br /><a target=\"_blank\" href=\"https://www.bilibili.com/video/BV1Rz4y1k7KT\" rel=\"nofollow noopener\">https://www.bilibili.com/video/BV1Rz4y1k7KT</a>",
        "last_modified": 1607698482,
        "replies": 8,
        "id": 734664
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1607656837",
            "name": "apple",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1607656837",
            "title": "Apple",
            "url": "https://www.v2ex.com/go/apple",
            "topics": 13227,
            "footer": "",
            "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。",
            "title_alternative": "Apple",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1607656837",
            "stars": 1630,
            "aliases": [],
            "root": false,
            "id": 184,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "Uene",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/f72a6cc442032e23dd5c79851c50cb94?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/Uene",
            "tagline": null,
            "twitter": null,
            "created": 1601433053,
            "avatar_large": "https://cdn.v2ex.com/gravatar/f72a6cc442032e23dd5c79851c50cb94?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/f72a6cc442032e23dd5c79851c50cb94?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 510683
        },
        "last_reply_by": "marat1ren",
        "last_touched": 1607714368,
        "title": "HomePod mini 的声音有点失望了",
        "url": "https://www.v2ex.com/t/734663",
        "created": 1607698267,
        "content": "和正代完全不是一个档次，不知道专业来说是什么原因，就听感上来说有一种很“硬”的感觉，如果听过正代的声音再听这个，会感觉是在折磨自己的耳朵",
        "content_rendered": "<p>和正代完全不是一个档次，不知道专业来说是什么原因，就听感上来说有一种很“硬”的感觉，如果听过正代的声音再听这个，会感觉是在折磨自己的耳朵</p>\n",
        "last_modified": 1607698267,
        "replies": 5,
        "id": 734663
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "mengchatc",
            "website": "",
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/51a7add76b8cdd3a7bae6795bf566816?s=24&d=retro",
            "bio": "121212",
            "url": "https://www.v2ex.com/u/mengchatc",
            "tagline": "",
            "twitter": null,
            "created": 1602573455,
            "avatar_large": "https://cdn.v2ex.com/gravatar/51a7add76b8cdd3a7bae6795bf566816?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/51a7add76b8cdd3a7bae6795bf566816?s=24&d=retro",
            "location": "",
            "btc": null,
            "id": 512558
        },
        "last_reply_by": "",
        "last_touched": 1607698057,
        "title": "一款功能强大的答题小程序",
        "url": "https://www.v2ex.com/t/734662",
        "created": 1607698237,
        "content": "以这个基础搭建的功能强大的答题小程序，有答题、学习、排名、错题本、答题邀请等功能模块。\r\n\r\n答题小程序非常适合单位、公司和学校进行人员考核、测评等一系列以考促学的活动。小程序易于使用的特点，也非常受年轻人比如员工、学生的喜欢，可以更好的进行知识的学习，提高技能！\r\n\r\n独立部署，稳定、安全、高效，满足企业、单位、教育行业的各种在线学习、培训需求。\r\n\r\n\r\n\r\n![]( https://upload-images.jianshu.io/upload_images/17427053-7f2f55cffa657c23.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/418/format/webp)\r\n\r\n![]( https://upload-images.jianshu.io/upload_images/17427053-28110168ecefe8ae.jpg?imageMogr2/auto-orient/strip|imageView2/2/format/webp)\r\n\r\n![]( https://upload-images.jianshu.io/upload_images/17427053-40f03d3c547fb435.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/417/format/webp)\r\n\r\n\r\n![]( https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi04NmE2N2IyMDEwNGVmODQyN2M4NDk4M2FjZGIwNjNiYl8xNDQwdy5qcGc?x-oss-process=image/format,png)",
        "content_rendered": "<p>以这个基础搭建的功能强大的答题小程序，有答题、学习、排名、错题本、答题邀请等功能模块。</p>\n<p>答题小程序非常适合单位、公司和学校进行人员考核、测评等一系列以考促学的活动。小程序易于使用的特点，也非常受年轻人比如员工、学生的喜欢，可以更好的进行知识的学习，提高技能！</p>\n<p>独立部署，稳定、安全、高效，满足企业、单位、教育行业的各种在线学习、培训需求。</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://upload-images.jianshu.io/upload_images/17427053-7f2f55cffa657c23.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/418/format/webp\"/></p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://upload-images.jianshu.io/upload_images/17427053-28110168ecefe8ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp\"/></p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://upload-images.jianshu.io/upload_images/17427053-40f03d3c547fb435.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/417/format/webp\"/></p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi04NmE2N2IyMDEwNGVmODQyN2M4NDk4M2FjZGIwNjNiYl8xNDQwdy5qcGc?x-oss-process=image/format,png\"/></p>\n",
        "last_modified": 1607698237,
        "replies": 0,
        "id": 734662
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "ttoott200",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/13dc68903cbe9e1972e983222be7774c?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/ttoott200",
            "tagline": null,
            "twitter": null,
            "created": 1512834986,
            "avatar_large": "https://cdn.v2ex.com/gravatar/13dc68903cbe9e1972e983222be7774c?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/13dc68903cbe9e1972e983222be7774c?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 273492
        },
        "last_reply_by": "Tumblr",
        "last_touched": 1607705647,
        "title": "有没有不对顾客推销的药店？",
        "url": "https://www.v2ex.com/t/734661",
        "created": 1607698101,
        "content": "每次去药店买药，店员总是推荐一些特别贵的或者一些不需要的药品、保健品之类的。便宜的性价比高的药总是被藏在比较隐秘的地方。我只是想自己安安静静地挑选非处方药，不需要店员的任何建议，但是店员还是会过来推销。",
        "content_rendered": "<p>每次去药店买药，店员总是推荐一些特别贵的或者一些不需要的药品、保健品之类的。便宜的性价比高的药总是被藏在比较隐秘的地方。我只是想自己安安静静地挑选非处方药，不需要店员的任何建议，但是店员还是会过来推销。</p>\n",
        "last_modified": 1607698101,
        "replies": 6,
        "id": 734661
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/17e6/2166/43_large.png?m=1605803735",
            "name": "jobs",
            "avatar_normal": "https://cdn.v2ex.com/navatar/17e6/2166/43_normal.png?m=1605803735",
            "title": "酷工作",
            "url": "https://www.v2ex.com/go/jobs",
            "topics": 44955,
            "footer": "",
            "header": "做有趣的有意义的事情。",
            "title_alternative": "Jobs",
            "avatar_mini": "https://cdn.v2ex.com/navatar/17e6/2166/43_mini.png?m=1605803735",
            "stars": 4472,
            "aliases": [],
            "root": false,
            "id": 43,
            "parent_node_name": "work"
        },
        "member": {
            "username": "cangxing1992",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/9cea/10de/508247_mini.png?m=1600237095",
            "bio": null,
            "url": "https://www.v2ex.com/u/cangxing1992",
            "tagline": null,
            "twitter": null,
            "created": 1600174891,
            "avatar_large": "https://cdn.v2ex.com/avatar/9cea/10de/508247_mini.png?m=1600237095",
            "avatar_mini": "https://cdn.v2ex.com/avatar/9cea/10de/508247_mini.png?m=1600237095",
            "location": null,
            "btc": null,
            "id": 508247
        },
        "last_reply_by": "",
        "last_touched": 1607696909,
        "title": "[字节跳动] 杭州电商团队招聘",
        "url": "https://www.v2ex.com/t/734658",
        "created": 1607697089,
        "content": "字节跳动杭州电商团队招贤纳士，坐标杭州西溪八方城！有意请直接点击链接投递~\r\nhttps://job.toutiao.com/s/J4Ee35f\r\n\r\n以下是 JD\r\n职位描述\r\n电商开放平台致力于打造字节电商体系开放生态闭环，实现全局业务能力与商家资源的开放共享，同时联合云服务、三方服务商，汇集能力地图，提供 ISV 一站式开发部署平台，通过整合电商开放能力以及外部 ISV 的专业化服务能力，丰富电商服务市场和解决方案，为商家持续赋能。\r\n1. 从 0 到 1 参与电商开放生态体系的建设，包括开放平台、电商云、服务市场以及开放商业化等方向的能力建设，挑战高并发、高可用以及复杂多变的个性化业务场景；\r\n2. 连接外部商家 /ISV 和内部核心平台的全局协同流程，深入到电商体系的各业务环节，对电商的整体业务和整个分工协作有直观的理解；\r\n3. 深入理解业务，技术驱动产品发展，能够根据团队的业务对应输出技术规划，并且驱动产品技术落地。\r\n\r\n职位要求\r\n1. 扎实的编程基础，精通 java/c++/golang 至少其中一种语言，有较强的架构能力和良好代码规范；\r\n2. 技术思路清晰，结构化思维清晰，善于解决复杂问题；\r\n3. 良好的设计能力、沟通能力，团队协作能力及项目掌控能力；\r\n4. 具备大型复杂项目的实战经验，设计及负责过大型复杂系统，系统架构设计有一定前瞻性；\r\n5. 有开放平台、服务市场、云平台及解决方案架构等相关研发经验者优先；\r\n6. 有电商相关系统，如交易、OMS 、ERP 等研发经验者优先。\r\n\r\n前端 QA 也招，都可以在链接里直接投递~！",
        "content_rendered": "字节跳动杭州电商团队招贤纳士，坐标杭州西溪八方城！有意请直接点击链接投递~<br /><a target=\"_blank\" href=\"https://job.toutiao.com/s/J4Ee35f\" rel=\"nofollow noopener\">https://job.toutiao.com/s/J4Ee35f</a><br /><br />以下是 JD<br />职位描述<br />电商开放平台致力于打造字节电商体系开放生态闭环，实现全局业务能力与商家资源的开放共享，同时联合云服务、三方服务商，汇集能力地图，提供 ISV 一站式开发部署平台，通过整合电商开放能力以及外部 ISV 的专业化服务能力，丰富电商服务市场和解决方案，为商家持续赋能。<br />1. 从 0 到 1 参与电商开放生态体系的建设，包括开放平台、电商云、服务市场以及开放商业化等方向的能力建设，挑战高并发、高可用以及复杂多变的个性化业务场景；<br />2. 连接外部商家 /ISV 和内部核心平台的全局协同流程，深入到电商体系的各业务环节，对电商的整体业务和整个分工协作有直观的理解；<br />3. 深入理解业务，技术驱动产品发展，能够根据团队的业务对应输出技术规划，并且驱动产品技术落地。<br /><br />职位要求<br />1. 扎实的编程基础，精通 java/c++/golang 至少其中一种语言，有较强的架构能力和良好代码规范；<br />2. 技术思路清晰，结构化思维清晰，善于解决复杂问题；<br />3. 良好的设计能力、沟通能力，团队协作能力及项目掌控能力；<br />4. 具备大型复杂项目的实战经验，设计及负责过大型复杂系统，系统架构设计有一定前瞻性；<br />5. 有开放平台、服务市场、云平台及解决方案架构等相关研发经验者优先；<br />6. 有电商相关系统，如交易、OMS 、ERP 等研发经验者优先。<br /><br />前端 QA 也招，都可以在链接里直接投递~！",
        "last_modified": 1607697089,
        "replies": 0,
        "id": 734658
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1607656837",
            "name": "apple",
            "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1607656837",
            "title": "Apple",
            "url": "https://www.v2ex.com/go/apple",
            "topics": 13227,
            "footer": "",
            "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。",
            "title_alternative": "Apple",
            "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1607656837",
            "stars": 1630,
            "aliases": [],
            "root": false,
            "id": 184,
            "parent_node_name": "hardware"
        },
        "member": {
            "username": "wwmmkk",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "bio": "",
            "url": "https://www.v2ex.com/u/wwmmkk",
            "tagline": "",
            "twitter": "",
            "created": 1300620401,
            "avatar_large": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "avatar_mini": "https://cdn.v2ex.com/avatar/2354/c276/7200_mini.png?m=1506257435",
            "location": "",
            "btc": "",
            "id": 7200
        },
        "last_reply_by": "wwmmkk",
        "last_touched": 1607647991,
        "title": "Big Sur 的 iCloud 云盘时不时疯狂下载",
        "url": "https://www.v2ex.com/t/734657",
        "created": 1607697070,
        "content": "今天发现在 Big Sur 里，iCloud Drive 时不时地就开始大量的下载文件到本地磁盘。\r\n\r\n而且下载的都是一些很久都没用过的文件，直到把磁盘空间占满。搞不懂是什么逻辑……",
        "content_rendered": "<p>今天发现在 Big Sur 里，iCloud Drive 时不时地就开始大量的下载文件到本地磁盘。</p>\n<p>而且下载的都是一些很久都没用过的文件，直到把磁盘空间占满。搞不懂是什么逻辑……</p>\n",
        "last_modified": 1607697089,
        "replies": 6,
        "id": 734657
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/17e6/2166/43_large.png?m=1605803735",
            "name": "jobs",
            "avatar_normal": "https://cdn.v2ex.com/navatar/17e6/2166/43_normal.png?m=1605803735",
            "title": "酷工作",
            "url": "https://www.v2ex.com/go/jobs",
            "topics": 44955,
            "footer": "",
            "header": "做有趣的有意义的事情。",
            "title_alternative": "Jobs",
            "avatar_mini": "https://cdn.v2ex.com/navatar/17e6/2166/43_mini.png?m=1605803735",
            "stars": 4472,
            "aliases": [],
            "root": false,
            "id": 43,
            "parent_node_name": "work"
        },
        "member": {
            "username": "dongliangnerd",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/ed75a3058ae4f9a214be65ab27bf4d53?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/dongliangnerd",
            "tagline": null,
            "twitter": null,
            "created": 1488439327,
            "avatar_large": "https://cdn.v2ex.com/gravatar/ed75a3058ae4f9a214be65ab27bf4d53?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/ed75a3058ae4f9a214be65ab27bf4d53?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 218432
        },
        "last_reply_by": "kenshinhu",
        "last_touched": 1607704431,
        "title": "硅谷公司，远程工作，招人啦~~",
        "url": "https://www.v2ex.com/t/734655",
        "created": 1607697018,
        "content": "帮朋友发一个招聘帖，感兴趣的老哥老姐可以直接发简历哦 🤪\r\n\r\n###  [公司介绍] \r\n\r\n- [Run the World]( https://www.runtheworld.today/)是硅谷的视频创业公司，利用直播和视频将国际会议完全线上化，让世界各地的人能够动动手指参与世界级的会议，结交世界各地的专家同行。\r\n- 我们的创始团队来自于 Facebook，Instagram，Microsoft，阿里巴巴，字节跳动等最顶尖公司，全部创始成员都是 Facebook，Instagram 的技术主管或者高级工程师，具有强大的产品、开发背景。硅谷最顶尖的 andreessen horowitz （曾投资 Facebook，Slack，box 等），金沙江创投，以及 Instagram 首席产品官，Twitter 首席产品官，Instacart 首席增长官，Atlassian 首席营销官，以及美国好莱坞名流投资，阵容强大。\r\n- 我们的公司总部在山景城，紧靠 Google 总部，风景优美，极客气息重。我们想在国内招聘部分开发测试等职位工程师，能尽早开始工作。公司文化是有一说一，不搞政治； 灵活工作，效率为先，不搞打卡加班拼时间；每周一次直怼 CEO 和 CTO 的公司 All Hands，有啥问题都可以直接问；以及专门为远程员工提供的情感以及工作的福利。我们提供到美国总部交流的机会，带你逛遍硅谷最好吃的食堂，登硅谷必登的山，一起打拳击强身健体，奶茶全包。远程文化浓厚，我们欢迎远程工程师，有很多为远程员工提供的娱乐社交活动丰富生活。\r\n\r\nRun The World 是一个总部位于硅谷的全远程公司。C-level 高管以及运营团队位于美国；产品团队位于亚洲，包括程序员、产品经理、QA 、以及设计师。产品团队大部分成员说流利中文，部分成员能中英双语沟通。由于我们是个横跨亚洲及美国的全远程公司，我们每天在 9AM ~ 12PM UTC+8 这段时间有比较多的会议以及跨团队沟通，下午多半是团队内部讨论以及代码开发。\r\n这是一间早期的初创公司，所以有比较多的混乱及不确定性，我们始终朝著开发伟大产品以及伟大企业这两个方向同时进行。\r\n\r\n###  [招聘岗位] \r\n\r\n#### 资深后端开发工程师（需求岗位数 3 位）\r\n\r\n1. 扎实的编程功底以及分析能力，具有丰富的服务端开发经验\r\n2. 有技术架构及系统设计能力\r\n3. 熟悉常见分布式技术，如负载均衡、高可用、消息系统、缓存技术等\r\n4. 熟悉常见 Web 服务器、内存、文件存储系统，数据库系统、消息队列、服务框架相关开源项目\r\n5. 能接受跨国远程工作且快步调的节奏\r\n6. 优秀的沟通能力并能独立作业\r\n\r\n加分项\r\n\r\n1. 熟悉 Golang\r\n2. 熟悉常用数据结构和算法，熟悉常用存储、缓存等基础中间件产品\r\n3. 有良好的技术架构和性能优化能力，熟悉大型复杂分布式系统架构设计和调优\r\n4. 熟悉 SRE (site reliability engineer) 相关知识\r\n5. 曾协助初创企业流量增长时期所带来的高并发问题\r\n6. 优秀的产品直觉\r\n\r\n#### 资深运维开发工程师（需求岗位数 1 位）\r\n\r\n1. 了解大规模分布式系统实践，包括多层架构、业务安全、监控、及存储系统\r\n2. 具有系统化解决问题思维，并了解基础算法、资料结构、及复杂度分析\r\n3. 对 Linux 有深入的认知\r\n4. 了解一门或多门开发语言 (Golang 、Python 、Java 、C/C++)，并能学习新语言\r\n5. 优秀的脚本编程技能\r\n\r\n加分项\r\n\r\n1. 深入了解网路知识，例如各种协议（ TCP/IP 、UDP 、ICMP 、etc ），IP packets, DNS, OSI layers，以及负载平衡\r\n2. 深入了解数据存储方案（ MySQL 、ElasticSearch ），云缓存方案（ Redis 、memchahe ），以及消息对列方案（ RabbitMQ 、Apache Kafka ）\r\n3. 曾在公有云（ AWS 、GCP 、Aliyun 等）搭建服务的经验\r\n4. 曾贡献于开源社群\r\n5. 深入了解资料工程各项知识，如 ETL （ Airflow 、GCP Composer ）以及 Data warehouse （ GCP BigQuery 、AWS Redshift 、Snowflake ）\r\n\r\n#### 前端开发工程师（需求岗位数 5 位）\r\n\r\n1. 计算机相关专业本科及以上学历；\r\n2. 熟练掌握各种前端技术，具备 PC/Mobile web 端的开发能力，有 2 年以上前端开发经验；\r\n3. 对 MVC/MVVM 等模式有一定理解，熟悉 React/Vue 等框架，掌握其最佳实践；\r\n4. 对参与过的项目，用过的技术方案有深入思考，希望在简历里有所体现；\r\n5. 对前端工程化有一定理解，熟悉 Webpack/Babel 等工具的使用和配置；\r\n6. 了解衡量产品性能的方法以及常见性能优化的方法；\r\n7. 积极主动、善于沟通，具有良好的团队协作能力；\r\n8. 英语熟练，不要求能够流利，需要读懂、编写英文文档；\r\n\r\n#### 测试开发工程师（需求岗位数 2 位）\r\n\r\n1. 3-8 年测试工作经验；\r\n2. 有维护测试环境、编写测试用例、编写用户使用手册经验；\r\n3. 熟悉 SQLSERVR 、ORACLE 等数据库系统；\r\n4. 熟悉 Linux 操作系统；\r\n5. 接受适度加班\r\n6. 性格严谨；\r\n7. 有自动化测试经验和性能测试经验者优先\r\n\r\n###  [简历投递] \r\n\r\n为了方便投递，大家可以直接丢中文简历过来~~\r\n\r\n简历投递邮箱：[yimi1227@hotmail.com](mailto:yimi1227@hotmail.com) \r\n\r\n主题写好来源 v 站，会优先处理噢",
        "content_rendered": "<p>帮朋友发一个招聘帖，感兴趣的老哥老姐可以直接发简历哦 🤪</p>\n<h3>[公司介绍]</h3>\n<ul>\n<li><a href=\"https://www.runtheworld.today/\" rel=\"nofollow\">Run the World</a>是硅谷的视频创业公司，利用直播和视频将国际会议完全线上化，让世界各地的人能够动动手指参与世界级的会议，结交世界各地的专家同行。</li>\n<li>我们的创始团队来自于 Facebook，Instagram，Microsoft，阿里巴巴，字节跳动等最顶尖公司，全部创始成员都是 Facebook，Instagram 的技术主管或者高级工程师，具有强大的产品、开发背景。硅谷最顶尖的 andreessen horowitz （曾投资 Facebook，Slack，box 等），金沙江创投，以及 Instagram 首席产品官，Twitter 首席产品官，Instacart 首席增长官，Atlassian 首席营销官，以及美国好莱坞名流投资，阵容强大。</li>\n<li>我们的公司总部在山景城，紧靠 Google 总部，风景优美，极客气息重。我们想在国内招聘部分开发测试等职位工程师，能尽早开始工作。公司文化是有一说一，不搞政治； 灵活工作，效率为先，不搞打卡加班拼时间；每周一次直怼 CEO 和 CTO 的公司 All Hands，有啥问题都可以直接问；以及专门为远程员工提供的情感以及工作的福利。我们提供到美国总部交流的机会，带你逛遍硅谷最好吃的食堂，登硅谷必登的山，一起打拳击强身健体，奶茶全包。远程文化浓厚，我们欢迎远程工程师，有很多为远程员工提供的娱乐社交活动丰富生活。</li>\n</ul>\n<p>Run The World 是一个总部位于硅谷的全远程公司。C-level 高管以及运营团队位于美国；产品团队位于亚洲，包括程序员、产品经理、QA 、以及设计师。产品团队大部分成员说流利中文，部分成员能中英双语沟通。由于我们是个横跨亚洲及美国的全远程公司，我们每天在 9AM ~ 12PM UTC+8 这段时间有比较多的会议以及跨团队沟通，下午多半是团队内部讨论以及代码开发。\n这是一间早期的初创公司，所以有比较多的混乱及不确定性，我们始终朝著开发伟大产品以及伟大企业这两个方向同时进行。</p>\n<h3>[招聘岗位]</h3>\n<h4>资深后端开发工程师（需求岗位数 3 位）</h4>\n<ol>\n<li>扎实的编程功底以及分析能力，具有丰富的服务端开发经验</li>\n<li>有技术架构及系统设计能力</li>\n<li>熟悉常见分布式技术，如负载均衡、高可用、消息系统、缓存技术等</li>\n<li>熟悉常见 Web 服务器、内存、文件存储系统，数据库系统、消息队列、服务框架相关开源项目</li>\n<li>能接受跨国远程工作且快步调的节奏</li>\n<li>优秀的沟通能力并能独立作业</li>\n</ol>\n<p>加分项</p>\n<ol>\n<li>熟悉 Golang</li>\n<li>熟悉常用数据结构和算法，熟悉常用存储、缓存等基础中间件产品</li>\n<li>有良好的技术架构和性能优化能力，熟悉大型复杂分布式系统架构设计和调优</li>\n<li>熟悉 SRE (site reliability engineer) 相关知识</li>\n<li>曾协助初创企业流量增长时期所带来的高并发问题</li>\n<li>优秀的产品直觉</li>\n</ol>\n<h4>资深运维开发工程师（需求岗位数 1 位）</h4>\n<ol>\n<li>了解大规模分布式系统实践，包括多层架构、业务安全、监控、及存储系统</li>\n<li>具有系统化解决问题思维，并了解基础算法、资料结构、及复杂度分析</li>\n<li>对 Linux 有深入的认知</li>\n<li>了解一门或多门开发语言 (Golang 、Python 、Java 、C/C++)，并能学习新语言</li>\n<li>优秀的脚本编程技能</li>\n</ol>\n<p>加分项</p>\n<ol>\n<li>深入了解网路知识，例如各种协议（ TCP/IP 、UDP 、ICMP 、etc ），IP packets, DNS, OSI layers，以及负载平衡</li>\n<li>深入了解数据存储方案（ MySQL 、ElasticSearch ），云缓存方案（ Redis 、memchahe ），以及消息对列方案（ RabbitMQ 、Apache Kafka ）</li>\n<li>曾在公有云（ AWS 、GCP 、Aliyun 等）搭建服务的经验</li>\n<li>曾贡献于开源社群</li>\n<li>深入了解资料工程各项知识，如 ETL （ Airflow 、GCP Composer ）以及 Data warehouse （ GCP BigQuery 、AWS Redshift 、Snowflake ）</li>\n</ol>\n<h4>前端开发工程师（需求岗位数 5 位）</h4>\n<ol>\n<li>计算机相关专业本科及以上学历；</li>\n<li>熟练掌握各种前端技术，具备 PC/Mobile web 端的开发能力，有 2 年以上前端开发经验；</li>\n<li>对 MVC/MVVM 等模式有一定理解，熟悉 React/Vue 等框架，掌握其最佳实践；</li>\n<li>对参与过的项目，用过的技术方案有深入思考，希望在简历里有所体现；</li>\n<li>对前端工程化有一定理解，熟悉 Webpack/Babel 等工具的使用和配置；</li>\n<li>了解衡量产品性能的方法以及常见性能优化的方法；</li>\n<li>积极主动、善于沟通，具有良好的团队协作能力；</li>\n<li>英语熟练，不要求能够流利，需要读懂、编写英文文档；</li>\n</ol>\n<h4>测试开发工程师（需求岗位数 2 位）</h4>\n<ol>\n<li>3-8 年测试工作经验；</li>\n<li>有维护测试环境、编写测试用例、编写用户使用手册经验；</li>\n<li>熟悉 SQLSERVR 、ORACLE 等数据库系统；</li>\n<li>熟悉 Linux 操作系统；</li>\n<li>接受适度加班</li>\n<li>性格严谨；</li>\n<li>有自动化测试经验和性能测试经验者优先</li>\n</ol>\n<h3>[简历投递]</h3>\n<p>为了方便投递，大家可以直接丢中文简历过来~~</p>\n<p>简历投递邮箱：<a href=\"mailto:yimi1227@hotmail.com\">yimi1227@hotmail.com</a></p>\n<p>主题写好来源 v 站，会优先处理噢</p>\n",
        "last_modified": 1607697018,
        "replies": 4,
        "id": 734655
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c9e1/074f/104_large.png?m=1607351613",
            "name": "cloud",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c9e1/074f/104_normal.png?m=1607351613",
            "title": "云计算",
            "url": "https://www.v2ex.com/go/cloud",
            "topics": 4286,
            "footer": "",
            "header": "关于云计算技术和平台的综合讨论区。",
            "title_alternative": "Cloud Computing",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c9e1/074f/104_mini.png?m=1607351613",
            "stars": 2606,
            "aliases": [],
            "root": false,
            "id": 104,
            "parent_node_name": "webmaster"
        },
        "member": {
            "username": "su977",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/9f28/e3ee/522656_mini.png?m=1607316762",
            "bio": null,
            "url": "https://www.v2ex.com/u/su977",
            "tagline": null,
            "twitter": null,
            "created": 1607316457,
            "avatar_large": "https://cdn.v2ex.com/avatar/9f28/e3ee/522656_mini.png?m=1607316762",
            "avatar_mini": "https://cdn.v2ex.com/avatar/9f28/e3ee/522656_mini.png?m=1607316762",
            "location": null,
            "btc": null,
            "id": 522656
        },
        "last_reply_by": "Noise233",
        "last_touched": 1607686133,
        "title": "各位体验阿里云",
        "url": "https://www.v2ex.com/t/734654",
        "created": 1607696933,
        "content": "各位体验阿里云 teambition 网盘的有没有遇过这样的问题，明明上传了 9G 文件，全部上传成功后只显示不到 2G，所以是不是可以理解成电脑推算的文件大小不准确？可能有空文档占空间？",
        "content_rendered": "各位体验阿里云 teambition 网盘的有没有遇过这样的问题，明明上传了 9G 文件，全部上传成功后只显示不到 2G，所以是不是可以理解成电脑推算的文件大小不准确？可能有空文档占空间？",
        "last_modified": 1607696933,
        "replies": 1,
        "id": 734654
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_large.png?m=1604596644",
            "name": "bb",
            "avatar_normal": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_normal.png?m=1604596644",
            "title": "宽带症候群",
            "url": "https://www.v2ex.com/go/bb",
            "topics": 8769,
            "footer": "",
            "header": "网速很重要。比快更快。",
            "title_alternative": "Broadband Symptom Complex",
            "avatar_mini": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_mini.png?m=1604596644",
            "stars": 4708,
            "aliases": [],
            "root": false,
            "id": 108,
            "parent_node_name": "geek"
        },
        "member": {
            "username": "shenfu1991",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/83687b54b474e861bc0c3853b099dd08?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/shenfu1991",
            "tagline": null,
            "twitter": null,
            "created": 1458019205,
            "avatar_large": "https://cdn.v2ex.com/gravatar/83687b54b474e861bc0c3853b099dd08?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/83687b54b474e861bc0c3853b099dd08?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 163399
        },
        "last_reply_by": "S179276SP",
        "last_touched": 1607702227,
        "title": "上海联通宽带出口彻底完了？",
        "url": "https://www.v2ex.com/t/734653",
        "created": 1607696613,
        "content": "之前还只是久不久断流几分钟，延迟变成 200+，过几分钟就会恢复。\r\n\r\n现在卡的连最垃圾的路线都不如了，油管 1000 以下的速度😂，好歹也是 GIA CN2 路线啊。。\r\n\r\n同样的广西移动随便 6w+的网速，上海电信估计也不会专业，有没有同样上海的老哥遇到同样问题？？？",
        "content_rendered": "<p>之前还只是久不久断流几分钟，延迟变成 200+，过几分钟就会恢复。</p>\n<p>现在卡的连最垃圾的路线都不如了，油管 1000 以下的速度😂，好歹也是 GIA CN2 路线啊。。</p>\n<p>同样的广西移动随便 6w+的网速，上海电信估计也不会专业，有没有同样上海的老哥遇到同样问题？？？</p>\n",
        "last_modified": 1607701611,
        "replies": 6,
        "id": 734653
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "zxCoder",
            "website": "",
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "bio": "",
            "url": "https://www.v2ex.com/u/zxCoder",
            "tagline": "",
            "twitter": null,
            "created": 1575385668,
            "avatar_large": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "avatar_mini": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "location": "",
            "btc": null,
            "id": 457207
        },
        "last_reply_by": "actorzjp",
        "last_touched": 1607703169,
        "title": "c#的 socket 这样写对不对啊",
        "url": "https://www.v2ex.com/t/734652",
        "created": 1607696586,
        "content": "异步，长连接，不知道这样子写对不对，在官网例子的基础上改了一点\r\n\r\n大概代码是这样子的，主要改的就是注释的地方\r\n\r\n```c\r\nnamespace MongoDB_PBAC_Server {\r\n    public class StateObject {\r\n        public const int BufferSize = 2048;\r\n        public byte[] buffer = new byte[BufferSize];\r\n        public int length;\r\n        public Socket workSocket = null;\r\n    }\r\n\r\n    public class Server {\r\n        public static ManualResetEvent allDone = new ManualResetEvent(false);\r\n        public static void StartListening() {\r\n            IPAddress ipAddress = IPAddress.Parse(\"127.0.0.1\");\r\n            int port = 33660;\r\n            IPEndPoint point = new IPEndPoint(ipAddress, port);\r\n            Socket listener = new Socket(ipAddress.AddressFamily, SocketType.Stream, ProtocolType.Tcp);\r\n            try {\r\n                listener.Bind(point);\r\n                listener.Listen(100);\r\n                while (true) {\r\n                    allDone.Reset();\r\n                    listener.BeginAccept(AcceptCallback, listener);\r\n                    allDone.WaitOne();\r\n                }\r\n            }\r\n            catch (Exception e) {  }\r\n        }\r\n\r\n        public static void AcceptCallback(IAsyncResult ar) {\r\n            allDone.Set();\r\n            Socket listener = (Socket) ar.AsyncState;\r\n            Socket handler = listener.EndAccept(ar);\r\n            StateObject state = new StateObject();\r\n            state.workSocket = handler;\r\n            handler.BeginReceive(state.buffer, 0, StateObject.BufferSize, 0, ReadCallback, state);\r\n        }\r\n\r\n        public static void ReadCallback(IAsyncResult ar) {\r\n            StateObject state = (StateObject) ar.AsyncState;\r\n            Socket handler = state.workSocket;\r\n            int bytesRead = handler.EndReceive(ar);\r\n            state.length += bytesRead;\r\n            if (bytesRead > 0) {\r\n                // 将缓冲区的字节反序列化为消息对象\r\n                Message message = Message.FromBytes(state.buffer);\r\n                if (message != null) {\r\n                    byte[] temp = new byte[StateObject.BufferSize];\r\n                    // 头部占 5 个字节\r\n                    for (int i = 0; i < state.length-(message.length+5); i++) {\r\n                        temp[i] = state.buffer[message.length+5 + i];\r\n                    }\r\n                    state.buffer = temp;\r\n                    state.length -= (message.length+5);\r\n                    Message res = HandleMessage(message);\r\n                    Send(handler, res.ToBytes());\r\n                }\r\n\r\n                // 剩下的继续接收                \r\n                handler.BeginReceive(\r\n                    state.buffer,\r\n                    state .length,\r\n                    state.buffer.Length - state.length,\r\n                    0,\r\n                    ReadCallback,\r\n                    state);\r\n            }\r\n            else {\r\n                // 如果接收字节数为 0，就关闭客户端？\r\n                handler.Shutdown(SocketShutdown.Both);\r\n                handler.Close();\r\n            }\r\n        }\r\n\r\n        private static void Send(Socket handler, byte[] data) {\r\n            handler.BeginSend(data, 0, data.Length, 0, SendCallback, handler);\r\n        }\r\n\r\n        private static void SendCallback(IAsyncResult ar) {\r\n            try {\r\n                Socket handler = (Socket) ar.AsyncState;\r\n                int bytesSent = handler.EndSend(ar);\r\n            }catch (Exception e) {}\r\n        }\r\n\r\n        private static Message HandleMessage(Message message) {\r\n            return message;\r\n        }\r\n    }\r\n}\r\n```",
        "content_rendered": "<p>异步，长连接，不知道这样子写对不对，在官网例子的基础上改了一点</p>\n<p>大概代码是这样子的，主要改的就是注释的地方</p>\n<pre><code class=\"language-c\">namespace MongoDB_PBAC_Server {\n    public class StateObject {\n        public const int BufferSize = 2048;\n        public byte[] buffer = new byte[BufferSize];\n        public int length;\n        public Socket workSocket = null;\n    }\n\n    public class Server {\n        public static ManualResetEvent allDone = new ManualResetEvent(false);\n        public static void StartListening() {\n            IPAddress ipAddress = IPAddress.Parse(\"127.0.0.1\");\n            int port = 33660;\n            IPEndPoint point = new IPEndPoint(ipAddress, port);\n            Socket listener = new Socket(ipAddress.AddressFamily, SocketType.Stream, ProtocolType.Tcp);\n            try {\n                listener.Bind(point);\n                listener.Listen(100);\n                while (true) {\n                    allDone.Reset();\n                    listener.BeginAccept(AcceptCallback, listener);\n                    allDone.WaitOne();\n                }\n            }\n            catch (Exception e) {  }\n        }\n\n        public static void AcceptCallback(IAsyncResult ar) {\n            allDone.Set();\n            Socket listener = (Socket) ar.AsyncState;\n            Socket handler = listener.EndAccept(ar);\n            StateObject state = new StateObject();\n            state.workSocket = handler;\n            handler.BeginReceive(state.buffer, 0, StateObject.BufferSize, 0, ReadCallback, state);\n        }\n\n        public static void ReadCallback(IAsyncResult ar) {\n            StateObject state = (StateObject) ar.AsyncState;\n            Socket handler = state.workSocket;\n            int bytesRead = handler.EndReceive(ar);\n            state.length += bytesRead;\n            if (bytesRead &gt; 0) {\n                // 将缓冲区的字节反序列化为消息对象\n                Message message = Message.FromBytes(state.buffer);\n                if (message != null) {\n                    byte[] temp = new byte[StateObject.BufferSize];\n                    // 头部占 5 个字节\n                    for (int i = 0; i &lt; state.length-(message.length+5); i++) {\n                        temp[i] = state.buffer[message.length+5 + i];\n                    }\n                    state.buffer = temp;\n                    state.length -= (message.length+5);\n                    Message res = HandleMessage(message);\n                    Send(handler, res.ToBytes());\n                }\n\n                // 剩下的继续接收                \n                handler.BeginReceive(\n                    state.buffer,\n                    state .length,\n                    state.buffer.Length - state.length,\n                    0,\n                    ReadCallback,\n                    state);\n            }\n            else {\n                // 如果接收字节数为 0，就关闭客户端？\n                handler.Shutdown(SocketShutdown.Both);\n                handler.Close();\n            }\n        }\n\n        private static void Send(Socket handler, byte[] data) {\n            handler.BeginSend(data, 0, data.Length, 0, SendCallback, handler);\n        }\n\n        private static void SendCallback(IAsyncResult ar) {\n            try {\n                Socket handler = (Socket) ar.AsyncState;\n                int bytesSent = handler.EndSend(ar);\n            }catch (Exception e) {}\n        }\n\n        private static Message HandleMessage(Message message) {\n            return message;\n        }\n    }\n}\n</code></pre>\n",
        "last_modified": 1607696586,
        "replies": 1,
        "id": 734652
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1607656893",
            "name": "mbp",
            "avatar_normal": "https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1607656893",
            "title": "MacBook Pro",
            "url": "https://www.v2ex.com/go/mbp",
            "topics": 6636,
            "footer": "",
            "header": "State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.",
            "title_alternative": "MacBook Pro",
            "avatar_mini": "https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1607656893",
            "stars": 2785,
            "aliases": [],
            "root": false,
            "id": 10,
            "parent_node_name": "apple"
        },
        "member": {
            "username": "ciki",
            "website": "",
            "github": "",
            "psn": "",
            "avatar_normal": "https://cdn.v2ex.com/gravatar/7a0c24f697ea1587001c36d00039b60f?s=24&d=retro",
            "bio": "",
            "url": "https://www.v2ex.com/u/ciki",
            "tagline": "",
            "twitter": "",
            "created": 1407422128,
            "avatar_large": "https://cdn.v2ex.com/gravatar/7a0c24f697ea1587001c36d00039b60f?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/7a0c24f697ea1587001c36d00039b60f?s=24&d=retro",
            "location": "",
            "btc": "",
            "id": 70209
        },
        "last_reply_by": "ciki",
        "last_touched": 1607634602,
        "title": "买了新的 m1，想把旧本的数据迁移到新 mac 上，只迁移文件，不迁移用户信息，迁移助手可以用吗？",
        "url": "https://www.v2ex.com/t/734651",
        "created": 1607695685,
        "content": "RT，只想把原来 mac 上的各种资源迁移过去，其他用户数据，软件等都不迁移，保证新 mac 系统纯净，有啥好办法吗？",
        "content_rendered": "RT，只想把原来 mac 上的各种资源迁移过去，其他用户数据，软件等都不迁移，保证新 mac 系统纯净，有啥好办法吗？",
        "last_modified": 1607695685,
        "replies": 2,
        "id": 734651
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1605803794",
            "name": "career",
            "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1605803794",
            "title": "职场话题",
            "url": "https://www.v2ex.com/go/career",
            "topics": 10452,
            "footer": "",
            "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。",
            "title_alternative": "Career",
            "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1605803794",
            "stars": 1870,
            "aliases": [],
            "root": false,
            "id": 770,
            "parent_node_name": "work"
        },
        "member": {
            "username": "zaima",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/4d83/4eb4/402282_mini.png?m=1558668776",
            "bio": null,
            "url": "https://www.v2ex.com/u/zaima",
            "tagline": null,
            "twitter": null,
            "created": 1555406246,
            "avatar_large": "https://cdn.v2ex.com/avatar/4d83/4eb4/402282_mini.png?m=1558668776",
            "avatar_mini": "https://cdn.v2ex.com/avatar/4d83/4eb4/402282_mini.png?m=1558668776",
            "location": null,
            "btc": null,
            "id": 402282
        },
        "last_reply_by": "",
        "last_touched": 1607522392,
        "title": "如果有明确计划的话，裸辞自学还是挺不错的，两个半月，拿到了 UE4 的 offer",
        "url": "https://www.v2ex.com/t/734649",
        "created": 1607695312,
        "content": "之前做棋牌游戏，实在是提不起兴趣。",
        "content_rendered": "之前做棋牌游戏，实在是提不起兴趣。",
        "last_modified": 1607695312,
        "replies": 0,
        "id": 734649
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "zxCoder",
            "website": "",
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "bio": "",
            "url": "https://www.v2ex.com/u/zxCoder",
            "tagline": "",
            "twitter": null,
            "created": 1575385668,
            "avatar_large": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "avatar_mini": "https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208",
            "location": "",
            "btc": null,
            "id": 457207
        },
        "last_reply_by": "",
        "last_touched": 1607608338,
        "title": "c#的 System.Text.Encoding.UTF8.GetString",
        "url": "https://www.v2ex.com/t/734648",
        "created": 1607694858,
        "content": "有没有可能对于两个不同的 byte 数组，解析出相同的字符串呢？\r\n\r\n刚才遇到一个情况，接收到的字符数组本来应该去掉前 5 个头部字节，再转成 string，但是发现直接转 string 得到的字符串居然看起来是一样的，但是==比较是不一样的，长度也不一样\r\n\r\n```\r\n// res 是 byte[1024] 其中前 5 个字符是 header，从 res[5]到 res[17]等同于 rec.data\r\nstring a = System.Text.Encoding.UTF8.GetString(res);\r\n// rec.data 是 byte[13]\r\nstring b = System.Text.Encoding.UTF8.GetString(rec.data);\r\n// 1024 13\r\nConsole.WriteLine(a.Length+\" \"+b.Length);\r\n```\r\n\r\n不太理解这是为什么这是为什么呢",
        "content_rendered": "<p>有没有可能对于两个不同的 byte 数组，解析出相同的字符串呢？</p>\n<p>刚才遇到一个情况，接收到的字符数组本来应该去掉前 5 个头部字节，再转成 string，但是发现直接转 string 得到的字符串居然看起来是一样的，但是==比较是不一样的，长度也不一样</p>\n<pre><code>// res 是 byte[1024] 其中前 5 个字符是 header，从 res[5]到 res[17]等同于 rec.data\nstring a = System.Text.Encoding.UTF8.GetString(res);\n// rec.data 是 byte[13]\nstring b = System.Text.Encoding.UTF8.GetString(rec.data);\n// 1024 13\nConsole.WriteLine(a.Length+\" \"+b.Length);\n</code></pre>\n<p>不太理解这是为什么这是为什么呢</p>\n",
        "last_modified": 1607694858,
        "replies": 0,
        "id": 734648
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c9f0/f895/8_large.png?m=1607656868",
            "name": "iphone",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c9f0/f895/8_normal.png?m=1607656868",
            "title": "iPhone",
            "url": "https://www.v2ex.com/go/iphone",
            "topics": 8091,
            "footer": "这里绝不讨论如何获得 iPhone 盗版软件、iTunes 黑卡之类。",
            "header": "Say hello to the future.",
            "title_alternative": "iPhone",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c9f0/f895/8_mini.png?m=1607656868",
            "stars": 2537,
            "aliases": [],
            "root": false,
            "id": 8,
            "parent_node_name": "apple"
        },
        "member": {
            "username": "deadtomb",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/fe136d7dcccaf8e5447ff73829f7831d?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/deadtomb",
            "tagline": null,
            "twitter": null,
            "created": 1487483804,
            "avatar_large": "https://cdn.v2ex.com/gravatar/fe136d7dcccaf8e5447ff73829f7831d?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/fe136d7dcccaf8e5447ff73829f7831d?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 216019
        },
        "last_reply_by": "wanqiuyao",
        "last_touched": 1607703065,
        "title": "ios 可不可以只屏蔽电话不屏蔽短信",
        "url": "https://www.v2ex.com/t/734646",
        "created": 1607694366,
        "content": "想屏蔽一些银行的营销电话，但由于还要收验证码因此需要正常接收短信，如果 block 之后短信也收不到了，似乎没有找到只 block 电话的设置，是不是我的打开方式不对，还是 ios 就是这么傻？",
        "content_rendered": "<p>想屏蔽一些银行的营销电话，但由于还要收验证码因此需要正常接收短信，如果 block 之后短信也收不到了，似乎没有找到只 block 电话的设置，是不是我的打开方式不对，还是 ios 就是这么傻？</p>\n",
        "last_modified": 1607694366,
        "replies": 8,
        "id": 734646
    },
    {
        "node": {
            "avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680",
            "name": "qna",
            "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680",
            "title": "问与答",
            "url": "https://www.v2ex.com/go/qna",
            "topics": 165442,
            "footer": "",
            "header": "一个更好的世界需要你持续地提出好问题。",
            "title_alternative": "Questions and Answers",
            "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680",
            "stars": 3101,
            "aliases": [],
            "root": false,
            "id": 12,
            "parent_node_name": "v2ex"
        },
        "member": {
            "username": "VeryEase",
            "website": null,
            "github": null,
            "psn": null,
            "avatar_normal": "https://cdn.v2ex.com/gravatar/70ee3fbae935340e76cf2ae60aecfc7d?s=24&d=retro",
            "bio": null,
            "url": "https://www.v2ex.com/u/VeryEase",
            "tagline": null,
            "twitter": null,
            "created": 1444792154,
            "avatar_large": "https://cdn.v2ex.com/gravatar/70ee3fbae935340e76cf2ae60aecfc7d?s=24&d=retro",
            "avatar_mini": "https://cdn.v2ex.com/gravatar/70ee3fbae935340e76cf2ae60aecfc7d?s=24&d=retro",
            "location": null,
            "btc": null,
            "id": 142481
        },
        "last_reply_by": "marat1ren",
        "last_touched": 1607704817,
        "title": "除了虾米之外，还有哪个 app 可以听 MQA",
        "url": "https://www.v2ex.com/t/734645",
        "created": 1607694364,
        "content": "请问下各位大佬， 除了虾米之外，还有哪个 APP 有 MQA 可以听的\r\n\r\n虾米估计要凉了， 手机每月自动订阅的虾米音乐，昨天发现我没做任何操作的前提下，停掉了订阅，无论如何都无法再续订了。",
        "content_rendered": "请问下各位大佬， 除了虾米之外，还有哪个 APP 有 MQA 可以听的<br /><br />虾米估计要凉了， 手机每月自动订阅的虾米音乐，昨天发现我没做任何操作的前提下，停掉了订阅，无论如何都无法再续订了。",
        "last_modified": 1607694364,
        "replies": 3,
        "id": 734645
    }
]
